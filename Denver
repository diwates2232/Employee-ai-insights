This is my Current fuile then give me Updated js file carefully

// scripts/generateDenverDoorFloorMap.js

const fs   = require('fs');
const path = require('path');
const xlsx = require('xlsx');

// 1. Load the workbook & first sheet
const filePath = path.join(__dirname, '..', 'data', 'doorDenver.xlsx');
const workbook = xlsx.readFile(filePath);
const sheet    = workbook.Sheets[workbook.SheetNames[0]];

// 2. Convert to JSON
const rows = xlsx.utils.sheet_to_json(sheet);
if (!rows.length) {
  console.error('No rows found in doorDenver.xlsx');
  process.exit(1);
}
console.log(`Read ${rows.length} rows from doorDenver.xlsx`);

// 3. Build the door→floor map
const doorFloorMap = {};

rows.forEach(row => {
  const rawDoor    = String(row['Your Actual Door Column Name'] || '').trim();
const inDirKey   = String(row['Your Actual In Direction Column'] || '').trim();
const outDirKey  = String(row['Your Actual Out Direction Column'] || '').trim();
const floor      = String(row['Your Actual Floor Column Name'] || '').trim();

  if (!rawDoor || !floor) {
    console.warn('Skipping row (missing Door Name or Floor):', row);
    return;
  }

  // Normalize door name
  const doorName = rawDoor.toUpperCase();

  // If you have explicit in/out strings in separate cols, use them:
  if (inDirKey) {
    doorFloorMap[`${doorName}___${inDirKey}`] = floor;
  }
  if (outDirKey) {
    doorFloorMap[`${doorName}___${outDirKey}`] = floor;
  }

  // Fallback: if someone left IN/OUT blank but you still want defaults:
  // doorFloorMap[`${doorName}___InDirection`]  = doorFloorMap[`${doorName}___InDirection`]  || floor;
  // doorFloorMap[`${doorName}___OutDirection`] = doorFloorMap[`${doorName}___OutDirection`] || floor;
});

// 4. Write out the JS file
const outputPath = path.join(__dirname, '..', 'data', 'denverDoorFloorMap.js');
fs.writeFileSync(outputPath,
  `// Auto-generated from data/doorDenver.xlsx\n` +
  `module.exports = ${JSON.stringify(doorFloorMap, null, 2)};\n`
);

console.log('✅ Denver door-to-floor map written to:', outputPath);



