Compiled with warnings.

[eslint]
src\App.js
  Line 228:10:  'summaryData' is assigned a value but never used  no-unused-vars

Search for the keywords to learn more about each warning.
To ignore, add // eslint-disable-next-line to the line before.

WARNING in [eslint]
src\App.js
  Line 228:10:  'summaryData' is assigned a value but never used  no-unused-vars

webpack compiled with 1 warning
Compiling...
Compiled with warnings.

[eslint]
src\App.js
  Line 228:10:  'summaryData' is assigned a value but never used  no-unused-vars

Search for the keywords to learn more about each warning.
To ignore, add // eslint-disable-next-line to the line before.

WARNING in [eslint]
src\App.js
  Line 228:10:  'summaryData' is assigned a value but never used  no-unused-vars

webpack compiled with 1 warning
Compiling...
Compiled with warnings.

[eslint]
src\App.js
  Line 327:10:  'summaryData' is assigned a value but never used  no-unused-vars

Search for the keywords to learn more about each warning.
To ignore, add // eslint-disable-next-line to the line before.

WARNING in [eslint]
src\App.js
  Line 327:10:  'summaryData' is assigned a value but never used  no-unused-vars

webpack compiled with 1 warning






import React, { useEffect, useState } from 'react';
import { Container, Navbar, Nav } from 'react-bootstrap';
import { BrowserRouter, Routes, Route, Link } from 'react-router-dom';
import { FaSun } from 'react-icons/fa';

import DashboardHome    from './pages/DashboardHome';
import FloorDetailsPage from './pages/FloorDetailsPage';

import './App.css';

export default function App() {
  // live data states
  const [summaryData, setSummaryData]               = useState([]);
  const [floorData, setFloorData]                   = useState([]);
  const [personnelBreakdown, setPersonnelBreakdown] = useState([]);
  const [totalVisitedToday, setTotalVisitedToday]   = useState(0);
  const [personnelSummary, setPersonnelSummary]     = useState({ employees: 0, contractors: 0 });
  const [visitedToday, setVisitedToday]             = useState({ employees: 0, contractors: 0, total: 0 });
  const [floorInOutSummary, setFloorInOutSummary]   = useState([]); // ← NEW

  useEffect(() => {
    const es = new EventSource('http://localhost:5000/api/live-occupancy-denver');
    es.onmessage = e => {
      try {
        const p = JSON.parse(e.data);
        setSummaryData(p.summary || []);
        setFloorData(p.floorBreakdown || []);
        setPersonnelBreakdown(p.personnelBreakdown || []);
        setTotalVisitedToday(p.totalVisitedToday || 0);
        setPersonnelSummary(p.personnelSummary || { employees: 0, contractors: 0 });
        setVisitedToday(p.visitedToday || { employees: 0, contractors: 0, total: 0 });
        setFloorInOutSummary(p.floorInOutSummary || []); // ← NEW
      } catch (err) {
        console.error('SSE parse error:', err);
      }
    };
    es.onerror = err => {
      console.error('SSE error:', err);
      es.close();
    };
    return () => es.close();
  }, []);

  return (
    <BrowserRouter>
      <div className="dark-theme">
        <Navbar bg="dark" variant="dark" expand="lg" className="px-4 navbar-infographic">
          <Navbar.Brand as={Link} to="/" className="wu-brand">
            Live Occupancy — Western Union Denver
          </Navbar.Brand>
          <Nav className="ms-auto align-items-center">
            <Nav.Link as={Link} to="/" className="nav-item-infographic">
              Dashboard
            </Nav.Link>
            <Nav.Link as={Link} to="/floor-details" className="nav-item-infographic">
              Floor Details
            </Nav.Link>
            <Nav.Link className="theme-toggle-icon" title="Dark mode only">
              <FaSun color="#FFC72C" />
            </Nav.Link>
          </Nav>
        </Navbar>

        <Container fluid className="mt-4">
          <Routes>
            <Route
              path="/"
              element={
                <DashboardHome
                  personnelSummary={personnelSummary}
                  totalVisitedToday={totalVisitedToday}
                  visitedToday={visitedToday}
                  floorData={floorData}
                  personnelBreakdown={personnelBreakdown}
                  floorInOutSummary={floorInOutSummary}  // ← PASS DOWN
                />
              }
            />
            <Route
              path="/floor-details"
              element={
                <FloorDetailsPage
                  floorData={floorData}
                  floorInOutSummary={floorInOutSummary}  // ← PASS DOWN
                />
              }
            />
          </Routes>
        </Container>
      </div>
    </BrowserRouter>
  );
}







