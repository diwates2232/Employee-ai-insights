import React, { useState, useEffect } from 'react';
import { 
  BrowserRouter as Router,
  Routes, Route, Link 
} from 'react-router-dom';
import {
  Container, Navbar, Nav, Button
} from 'react-bootstrap';
import { FaSun, FaMoon } from 'react-icons/fa';

import DashboardHome from './pages/DashboardHome';
import FloorDetailsPage from './pages/FloorDetailsPage';

export default function App() {
  // theme state
  const [theme, setTheme] = useState('dark');
  useEffect(() => {
    const saved = localStorage.getItem('denver-dashboard-theme');
    if (saved === 'light' || saved === 'dark') setTheme(saved);
    else {
      // default to dark
      document.body.setAttribute('data-theme', 'dark');
    }
  }, []);
  useEffect(() => {
    document.body.setAttribute('data-theme', theme);
    localStorage.setItem('denver-dashboard-theme', theme);
  }, [theme]);

  const toggleTheme = () => {
    setTheme(t => (t === 'dark' ? 'light' : 'dark'));
  };

  return (
    <Router>
      <Navbar
        expand="lg"
        className="px-4 py-2"
        bg={theme === 'dark' ? 'dark' : 'light'}
        variant={theme === 'dark' ? 'dark' : 'light'}
      >
        <Navbar.Brand className="fw-bold">
          Live Occupancy — Western Union Denver
        </Navbar.Brand>
        <Nav className="me-auto">
          <Nav.Link as={Link} to="/">Dashboard</Nav.Link>
          <Nav.Link as={Link} to="/floors">Floor Details</Nav.Link>
        </Nav>
        <Button
          variant={theme === 'dark' ? 'light' : 'dark'}
          onClick={toggleTheme}
          aria-label="Toggle theme"
        >
          {theme === 'dark' ? <FaSun /> : <FaMoon />}
        </Button>
      </Navbar>

      <Container fluid className="p-0">
        <Routes>
          <Route
            path="/"
            element={<DashboardHome theme={theme} />}
          />
          <Route
            path="/floors"
            element={<FloorDetailsPage theme={theme} />}
          />
        </Routes>
      </Container>
    </Router>
  );
}







/* global theme variables */
body[data-theme="dark"] {
  --bg-color: #121212;
  --fg-color: #e0e0e0;
  --panel-bg: #1e1e1e;
  --accent: #FFD100;
  --accent-dark: #009E60;
}
body[data-theme="light"] {
  --bg-color: #f9f9f9;
  --fg-color: #333;
  --panel-bg: #fff;
  --accent: #FFD100;
  --accent-dark: #009E60;
}

/* apply to root */
body {
  background-color: var(--bg-color);
  color: var(--fg-color);
  transition: background 0.3s, color 0.3s;
}

/* summary card overrides */
.infographic-card {
  background-color: var(--panel-bg) !important;
  border-color: var(--accent) !important;
}
.infographic-card .text-info   { color: var(--accent) !important; }
.infographic-card .text-success{ color: var(--accent-dark) !important; }
.infographic-card .text-warning{ color: var(--accent) !important; }

/* chart panels */
.chart-card {
  background-color: var(--panel-bg) !important;
  border: 1px solid var(--fg-color)!important;
}

/* Navbar override */
.navbar {
  background-color: var(--panel-bg) !important;
}

/* link colors */
.nav-link, .navbar-brand {
  color: var(--fg-color) !important;
}

/* when hovering links */
.nav-link:hover {
  color: var(--accent) !important;
}












C:\Users\W0024618\Desktop\swipeData\client-denver\src\App.js


import React, { useState, useEffect } from 'react';
import {
  Container, Row, Col,
  Navbar, Nav, Button, Card
} from 'react-bootstrap';
import { FaSun, FaMoon } from 'react-icons/fa';

import SummaryCards from '../components/SummaryCards';
import FloorOccupancyChart from '../components/FloorOccupancyChart';
import PersonnelDonutChart from '../components/PersonnelDonutChart';

export default function DashboardHome({
  personnelSummary,
  totalVisitedToday,
  visitedToday,
  floorData,
  personnelBreakdown
}) {
  const [theme, setTheme] = useState('dark');
  useEffect(() => {
    const saved = localStorage.getItem('denver-dashboard-theme');
    if (saved === 'light' || saved === 'dark') setTheme(saved);
  }, []);
  const toggleTheme = () => {
    const next = theme === 'dark' ? 'light' : 'dark';
    setTheme(next);
    localStorage.setItem('denver-dashboard-theme', next);
  };

  const employees      = personnelSummary?.employees   ?? 0;
  const contractors    = personnelSummary?.contractors ?? 0;
  const totalOccupancy = employees + contractors;

  const chartData = personnelBreakdown.map(({ personnelType, count }) => ({
    personnelType, count
  }));

  const bgClass = theme === 'dark' ? 'bg-dark text-light' : 'bg-light text-dark';
  const panelBg = theme === 'dark' ? 'bg-secondary text-light' : 'bg-white text-dark';

  return (
    <>
      <Navbar expand="lg" className={`px-4 ${bgClass}`}>
        <Navbar.Brand className="fw-bold">
          Denver Live Occupancy — Western Union Denver
        </Navbar.Brand>
        <Nav className="me-auto">
          <Nav.Link href="/" className={bgClass}>Dashboard</Nav.Link>
          <Nav.Link href="/floors" className={bgClass}>Floor Details</Nav.Link>
        </Nav>
        <Button
          variant={theme === 'dark' ? 'light' : 'dark'}
          onClick={toggleTheme}
          aria-label="Toggle theme"
        >
          {theme === 'dark' ? <FaSun /> : <FaMoon />}
        </Button>
      </Navbar>

      <Container fluid className={`${bgClass} py-4 min-vh-100`}>
        {/* White panel behind summaries & charts */}
        <Card className={`p-4 mb-4 ${panelBg} shadow-sm`}>
          <SummaryCards
            totalOccupancy={totalOccupancy}
            employeeCount={employees}
            contractorCount={contractors}
            totalVisitedToday={totalVisitedToday}
            employeesVisitedToday={visitedToday?.employees   ?? 0}
            contractorsVisitedToday={visitedToday?.contractors ?? 0}
            theme={theme}
          />

          <Row className="g-4">
            <Col md={6} lg={4}>
              <FloorOccupancyChart data={floorData} theme={theme} />
            </Col>
            <Col md={6} lg={4}>
              <PersonnelDonutChart data={chartData} theme={theme} />
            </Col>
          </Row>
        </Card>
      </Container>
    </>
  );
}



C:\Users\W0024618\Desktop\swipeData\client-denver\src\App.css

.App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
