C:\Users\W0024618\Desktop\swipeData\client\src\pages\DashboardHome.jsx

import React from 'react';
import { Container, Row, Col } from 'react-bootstrap';

import SummaryCards from '../components/SummaryCards';
import FloorOccupancyChart from '../components/FloorOccupancyChart';
import SummaryChart from '../components/SummaryChart';
import PersonnelDonutChart from '../components/PersonnelDonutChart';
import ERTOverview from '../components/ERTOverview';

export default function DashboardHome({
  personnelSummary,
  totalVisitedToday,   // <-- number from backend
  visitedToday,        // <-- { employees, contractors, total }
  floorData,
  zoneSummaryData,
  personnelBreakdown,
   ertStatus
}) {
  const employees       = personnelSummary?.employees   ?? 0;
  const contractors     = personnelSummary?.contractors ?? 0;
  const totalOccupancy  = employees + contractors;

  // use the backend’s two‐entry array directly for the donut
  const chartData = personnelBreakdown.map(({ personnelType, count }) => ({
    personnelType,
    count
  }));

  return (
    <Container fluid className="py-4">
      <SummaryCards
        totalOccupancy={totalOccupancy}
        employeeCount={employees}
        contractorCount={contractors}
        totalVisitedToday={totalVisitedToday}
        employeesVisitedToday={visitedToday?.employees   ?? 0}
        contractorsVisitedToday={visitedToday?.contractors ?? 0}
  
      />

      <Row className="g-4">
        <Col md={4}>
          <FloorOccupancyChart data={floorData} />
        </Col>
        <Col md={4}>
          <SummaryChart summary={zoneSummaryData} />
        </Col>
        <Col md={4}>
          <PersonnelDonutChart data={chartData} />
        </Col>

         {/* 4th section: ERT status */}
        <ERTOverview ertStatus={ertStatus} />
      </Row>


 {/* Footer */}
      <footer
        style={{
          backgroundColor: '#000',
          color: '#FFC72C',
          padding: '1.5rem 0',
          textAlign: 'center',
          marginTop: '2rem',
          borderTop: '2px solid #FFC72C',
          fontSize: '0.95rem',
          lineHeight: '1.6'
        }}
      >
        <div>
          <strong>Global Security Operations Center (GSOC)</strong><br />
          Live Occupancy dashboard for Western Union Pune — Real-time occupancy, floor activity, and personnel insights.
        </div>
        <div style={{ marginTop: '0.75rem' }}>
          Contact us: <a href="mailto:GSOC-GlobalSecurityOperationCenter.SharedMailbox@westernunion.com" style={{ color: '#FFC72C', textDecoration: 'underline' }}>gsoc@westernunion.com</a> |
          Landline: <span style={{ color: '#FFC72C' }}>+91-020-67632394</span>
        </div>
      </footer>
    </Container>
  );
}





// src/components/ERTOverview.jsx

import React from 'react';
import {
  Card,
  Row,
  Col,
  ListGroup,
  Badge
} from 'react-bootstrap';
import {
  FaEnvelopeOpenText,
  FaMobileAlt,
  FaMapMarkerAlt,
  FaHome
} from 'react-icons/fa';

/** Base location per role **/
const baseLocationByRole = {
  "Site Head":                  "Podium Floor – Red Zone",
  "HR":                          "Podium Floor – Red Zone",
  "Incident Controller":        "Podium Floor – Green Zone",
  "First Aid Team":             "Podium Floor – Green Zone",
  "ERT Team Leader":            "Podium Floor – Green Zone",
  "BCM Team / Site Operations": "Podium Floor – Red Zone"
};

/** Header border color per role **/
const headerColorByRole = {
  "Incident Controller":        "#009E60",
  "First Aid Team":             "#FFD100",
  "ERT Team Leader":            "#FFB800",
  "BCM Team / Site Operations": "#A80000",
  "Site Head":                  "#58595B",
  "HR":                          "#FF6F61"
};

// rotating name colors (expandable)
const NAME_COLORS = ['#FFD100'];

export default function ERTOverview({ ertStatus }) {
  return (
    <div className="mt-0">
      <Row className="g-2 mt-1">
        {Object.entries(ertStatus).map(([role, members]) => {
          const accent = headerColorByRole[role] || '#FFD100';
          const baseLoc = baseLocationByRole[role] || 'N/A';

          // present members first
          const sorted = [...members].sort((a, b) =>
            (a.present === b.present) ? 0 : a.present ? -1 : 1
          );

          return (
            <Col key={role} md={6} lg={4}>
              <Card className="h-100 shadow-sm">
                <Card.Header
                  className="bg-dark text-white"
                  style={{
                    borderTop:    `4px solid ${accent}`,
                    borderLeft:   `6px solid ${accent}`,
                    borderRadius: '0 0.25rem 0 0'
                  }}
                >
                  {role}
                </Card.Header>
                <ListGroup variant="flush">
                  {sorted.map((m, idx) => {
                    const nameColor = NAME_COLORS[idx % NAME_COLORS.length];
                    return (
                      <ListGroup.Item key={m.name} className="py-2 bg-dark text-white">
                        {/* Name + Availability */}
                        <div className="d-flex justify-content-between align-items-start">
                          <div>
                            <strong style={{ color: nameColor }}>{m.name}</strong>
                            <Badge
                              bg={m.present ? 'success' : 'danger'}
                              className="ms-2"
                              pill
                            >
                              {m.present ? 'Available' : 'Away'}
                            </Badge>
                          </div>
                        </div>

                        {/* Contact row */}
                        <div className="mt-2">
                          <div className="small d-flex align-items-center mb-1">
                            <FaEnvelopeOpenText className="me-2" style={{ color: '#FFD100' }} />
                            <a
                              href={`mailto:${m.email}`}
                              style={{ color: '#fff', textDecoration: 'underline' }}
                            >
                              {m.email}
                            </a>
                          </div>
                          <div className="small d-flex align-items-center">
                            <FaMobileAlt className="me-2" style={{ color: '#FF6F61' }} />
                            <a
                              href={`tel:${m.phone}`}
                              style={{ color: '#fff', textDecoration: 'underline' }}
                            >
                              {m.phone}
                            </a>
                          </div>
                        </div>

                        {/* Locations */}
                        <div className="mt-3 d-flex flex-wrap gap-3 small">
                          <div className="d-flex align-items-center">
                            <FaHome className="me-2" style={{ color: '#A80000' }} />
                            <span style={{ color: '#A80000' }}>
                              Base: {baseLoc}
                            </span>
                          </div>
                          {m.present && (
                            <div className="d-flex align-items-center">
                              <FaMapMarkerAlt className="me-2" style={{ color: '#009E60' }} />
                              <span style={{ color: '#009E60' }}>
                                Live: {m.zone || 'N/A'}
                              </span>
                            </div>
                          )}
                        </div>
                      </ListGroup.Item>
                    );
                  })}
                </ListGroup>
              </Card>
            </Col>
          );
        })}
      </Row>
    </div>
  );
}





// src/App.js

import React, { useEffect, useState } from 'react';
import { Container, Navbar, Nav } from 'react-bootstrap';
import { BrowserRouter, Routes, Route, Link } from 'react-router-dom';
import { FaSun } from 'react-icons/fa';

import ZoneDetailsTable from './components/ZoneDetailsTable';
import DashboardHome    from './pages/DashboardHome';

import './App.css';

function ZoneDetailsPage({ detailsData }) {
  return (
    <>
      <div className="d-flex justify-content-between align-items-center mb-2">
        <Link to="/" className="btn btn-secondary">
          ← Back to Dashboard
        </Link>
      </div>
      <ZoneDetailsTable data={detailsData} />
    </>
  );
}

function App() {
  const [summaryData, setSummaryData]             = useState([]);
  const [detailsData, setDetailsData]             = useState({});
  const [floorData, setFloorData]                 = useState([]);
  const [zoneBreakdown, setZoneBreakdown]         = useState([]);
  const [personnelBreakdown, setPersonnelBreakdown] = useState([]);
  const [totalVisitedToday, setTotalVisitedToday] = useState(0);
  const [personnelSummary, setPersonnelSummary]   = useState({ employees: 0, contractors: 0 });
  const [visitedToday, setVisitedToday]           = useState({ employees: 0, contractors: 0, total: 0 });
  const [ertStatus, setErtStatus]                 = useState({});

  useEffect(() => {
    const es = new EventSource('http://localhost:5000/api/live-occupancy');
    es.onmessage = e => {
      try {
        const p = JSON.parse(e.data);
        setSummaryData(p.summary           || []);
        setDetailsData(p.details           || {});
        setFloorData(p.floorBreakdown      || []);
        setZoneBreakdown(p.zoneBreakdown   || []);
        setPersonnelBreakdown(p.personnelBreakdown || []);
        setTotalVisitedToday(p.totalVisitedToday || 0);
        setPersonnelSummary(p.personnelSummary     || { employees: 0, contractors: 0 });
        setVisitedToday(p.visitedToday              || { employees: 0, contractors: 0, total: 0 });
        setErtStatus(p.ertStatus                    || {});
      } catch {
        console.error('SSE parse error');
      }
    };
    es.onerror = err => {
      console.error('SSE error', err);
      es.close();
    };
    return () => es.close();
  }, []);

  return (
    <BrowserRouter>
      <div className="dark-theme">
        <Navbar bg="dark" variant="dark" expand="lg" className="px-4">
          <Navbar.Brand as={Link} to="/" className="wu-brand">
            Live Occupancy — Western Union Pune
          </Navbar.Brand>
          <Nav className="ms-auto align-items-center">
            <Nav.Link as={Link} to="/" className="nav-item-infographic">
              Dashboard
            </Nav.Link>
            <Nav.Link as={Link} to="/details" className="nav-item-infographic">
              Details
            </Nav.Link>
            <Nav.Link className="theme-toggle-icon" title="Dark mode only">
              <FaSun />
            </Nav.Link>
          </Nav>
        </Navbar>

        <Container fluid className="mt-2">
          <Routes>
            <Route
              path="/"
              element={
                <DashboardHome
                  zoneSummaryData={summaryData}
                  detailsData={detailsData}
                  floorData={floorData}
                  zoneBreakdown={zoneBreakdown}
                  personnelBreakdown={personnelBreakdown}
                  totalVisitedToday={totalVisitedToday}
                  personnelSummary={personnelSummary}
                  visitedToday={visitedToday}
                  ertStatus={ertStatus}
                />
              }
            />
            <Route
              path="/details"
              element={<ZoneDetailsPage detailsData={detailsData} />}
            />
          </Routes>
        </Container>
      </div>
    </BrowserRouter>
  );
}

export default App;







