import React, { useEffect, useState } from 'react';
import { Container, Navbar, Nav } from 'react-bootstrap';
import { BrowserRouter, Routes, Route, Link } from 'react-router-dom';
import { FaSun } from 'react-icons/fa';

import ZoneDetailsTable from './components/ZoneDetailsTable';
import DashboardHome from './pages/DashboardHome';
import ErtPage from './pages/ErtPage'; // ✅ ADDED

import './App.css';

function ZoneDetailsPage({ detailsData }) {
  return (
    <>
      <div className="d-flex justify-content-between align-items-center mb-2">
        <Link to="/" className="btn btn-secondary">
          ← Back to Dashboard
        </Link>
      </div>
      <ZoneDetailsTable data={detailsData} />
    </>
  );
}

function App() {
  const [summaryData, setSummaryData] = useState([]);
  const [detailsData, setDetailsData] = useState({});
  const [floorData, setFloorData] = useState([]);
  const [zoneBreakdown, setZoneBreakdown] = useState([]);
  const [personnelBreakdown, setPersonnelBreakdown] = useState([]);
  const [totalVisitedToday, setTotalVisitedToday] = useState(0);
  const [personnelSummary, setPersonnelSummary] = useState({ employees: 0, contractors: 0 });
  const [visitedToday, setVisitedToday] = useState({ employees: 0, contractors: 0, total: 0 });
  const [ertStatus, setErtStatus] = useState({});

  useEffect(() => {
    const es = new EventSource('http://localhost:5000/api/live-occupancy');

    es.onmessage = e => {
      try {
        const p = JSON.parse(e.data);
        setSummaryData(Array.isArray(p.summary) ? [...p.summary] : []);
        setDetailsData(p.details || {});
        setFloorData(Array.isArray(p.floorBreakdown) ? [...p.floorBreakdown] : []);
        setZoneBreakdown(Array.isArray(p.zoneBreakdown) ? [...p.zoneBreakdown] : []);
        setPersonnelBreakdown(Array.isArray(p.personnelBreakdown) ? [...p.personnelBreakdown] : []);
        setTotalVisitedToday(typeof p.totalVisitedToday === 'number' ? p.totalVisitedToday : 0);
        setPersonnelSummary(p.personnelSummary || { employees: 0, contractors: 0 });
        setVisitedToday(p.visitedToday || { employees: 0, contractors: 0, total: 0 });
        setErtStatus(p.ertStatus || {});
      } catch {
        console.error('SSE parse error');
      }
    };

    es.onerror = err => {
      console.error('SSE error', err);
      es.close();
    };

    return () => es.close();
  }, []);

  return (
    <BrowserRouter>
      <div className="dark-theme">
        <Navbar bg="dark" variant="dark" expand="lg" className="px-4">
          <Navbar.Brand as={Link} to="/" className="wu-brand">
            Live Occupancy — Western Union Pune
          </Navbar.Brand>
          <Nav className="ms-auto align-items-center">
            <Nav.Link as={Link} to="/" className="nav-item-infographic">
              Dashboard
            </Nav.Link>
            <Nav.Link as={Link} to="/details" className="nav-item-infographic">
              Details
            </Nav.Link>
            <Nav.Link as={Link} to="/ert" className="nav-item-infographic"> {/* ✅ NEW LINK */}
              ERT Overview
            </Nav.Link>
            <Nav.Link className="theme-toggle-icon" title="Dark mode only">
              <FaSun />
            </Nav.Link>
          </Nav>
        </Navbar>

        <Container fluid className="mt-2">
          <Routes>
            <Route
              path="/"
              element={
                <DashboardHome
                  summaryData={summaryData}
                  detailsData={detailsData}
                  floorData={floorData}
                  zoneBreakdown={zoneBreakdown}
                  personnelBreakdown={personnelBreakdown}
                  totalVisitedToday={totalVisitedToday}
                  personnelSummary={personnelSummary}
                  visitedToday={visitedToday}
                  ertStatus={ertStatus}
                />
              }
            />
            <Route path="/details" element={<ZoneDetailsPage detailsData={detailsData} />} />
            <Route path="/ert" element={<ErtPage ertStatus={ertStatus} />} /> {/* ✅ NEW ROUTE */}
          </Routes>
        </Container>
      </div>
    </BrowserRouter>
  );
}

export default App;












add navigation link and give me updated js file carefully


C:\Users\W0024618\Desktop\swipeData\client\src\App.js

import React, { useEffect, useState } from 'react';
import { Container, Navbar, Nav } from 'react-bootstrap';
import { BrowserRouter, Routes, Route, Link } from 'react-router-dom';
import { FaSun } from 'react-icons/fa';

import ZoneDetailsTable from './components/ZoneDetailsTable';
import DashboardHome    from './pages/DashboardHome';

import './App.css';

function ZoneDetailsPage({ detailsData }) {
  return (
    <>
      <div className="d-flex justify-content-between align-items-center mb-2">
        <Link to="/" className="btn btn-secondary">
          ← Back to Dashboard
        </Link>
      </div>
      <ZoneDetailsTable data={detailsData} />
    </>
  );
}

function App() {
  // 1) Maintain a state for "summary" (just zone + count)
  const [summaryData, setSummaryData]               = useState([]);
  const [detailsData, setDetailsData]               = useState({});
  const [floorData, setFloorData]                   = useState([]);
  const [zoneBreakdown, setZoneBreakdown]           = useState([]);
  const [personnelBreakdown, setPersonnelBreakdown] = useState([]);
  const [totalVisitedToday, setTotalVisitedToday]   = useState(0);
  const [personnelSummary, setPersonnelSummary]     = useState({ employees: 0, contractors: 0 });
  const [visitedToday, setVisitedToday]             = useState({ employees: 0, contractors: 0, total: 0 });
  const [ertStatus, setErtStatus]                   = useState({});

  useEffect(() => {
    const es = new EventSource('http://localhost:5000/api/live-occupancy');

    es.onmessage = e => {
      try {
        const p = JSON.parse(e.data);

        // ─── Make sure we pull "summary" exactly as { zone, count } ───
        setSummaryData(Array.isArray(p.summary) ? [...p.summary] : []);

        setDetailsData(p.details || {});

        setFloorData(Array.isArray(p.floorBreakdown) ? [...p.floorBreakdown] : []);

        // "zoneBreakdown" is the detailed breakdown ⇒ use it elsewhere
        setZoneBreakdown(Array.isArray(p.zoneBreakdown) ? [...p.zoneBreakdown] : []);

        setPersonnelBreakdown(Array.isArray(p.personnelBreakdown)
          ? [...p.personnelBreakdown]
          : []);

        setTotalVisitedToday(typeof p.totalVisitedToday === 'number'
          ? p.totalVisitedToday
          : 0
        );

        setPersonnelSummary(p.personnelSummary || { employees: 0, contractors: 0 });

        setVisitedToday(p.visitedToday || { employees: 0, contractors: 0, total: 0 });

        setErtStatus(p.ertStatus || {});
      } catch {
        console.error('SSE parse error');
      }
    };

    es.onerror = err => {
      console.error('SSE error', err);
      es.close();
    };

    return () => es.close();
  }, []);

  return (
    <BrowserRouter>
      <div className="dark-theme">
        <Navbar bg="dark" variant="dark" expand="lg" className="px-4">
          <Navbar.Brand as={Link} to="/" className="wu-brand">
            Live Occupancy — Western Union Pune
          </Navbar.Brand>
          <Nav className="ms-auto align-items-center">
            <Nav.Link as={Link} to="/" className="nav-item-infographic">
              Dashboard
            </Nav.Link>
            <Nav.Link as={Link} to="/details" className="nav-item-infographic">
              Details
            </Nav.Link>
            <Nav.Link className="theme-toggle-icon" title="Dark mode only">
              <FaSun />
            </Nav.Link>
          </Nav>
        </Navbar>

        <Container fluid className="mt-2">
          <Routes>
            <Route
              path="/"
              element={
                <DashboardHome
                  summaryData={summaryData}           // ← pass the zone+count array
                  detailsData={detailsData}
                  floorData={floorData}
                  zoneBreakdown={zoneBreakdown}       // ← detailed breakdown if needed
                  personnelBreakdown={personnelBreakdown}
                  totalVisitedToday={totalVisitedToday}
                  personnelSummary={personnelSummary}
                  visitedToday={visitedToday}
                  ertStatus={ertStatus}
                />
              }
            />
            <Route
              path="/details"
              element={<ZoneDetailsPage detailsData={detailsData} />}
            />
          </Routes>
        </Container>
      </div>
    </BrowserRouter>
  );
}

export default App;






// src/pages/ErtPage.jsx

import React from 'react';
import { Container, Row, Col, Button } from 'react-bootstrap';
import { Link } from 'react-router-dom';
import ERTOverview from '../components/ERTOverview';

/**
 * A standalone page that only renders the ERTOverview component,
 * with a "← Back to Dashboard" link at the top.
 */
export default function ErtPage({ ertStatus }) {
  return (
    <Container fluid className="py-4">
      {/* Back‐to‐Dashboard link */}
      <div className="mb-3">
        <Button as={Link} to="/" variant="secondary">
          ← Back to Dashboard
        </Button>
      </div>

      {/* ERTOverview (re‐use existing component) */}
      <Row className="g-2">
        <Col>
          <ERTOverview ertStatus={ertStatus} />
        </Col>
      </Row>
    </Container>
  );
}


