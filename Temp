:: 1. Make sure you’re in your project folder
cd C:\Users\W0024618\Desktop\swipeData\employee-ai-insights

:: 2. Remove node_modules directory
rd /s /q node_modules

:: 3. Remove package-lock.json file
del package-lock.json

:: 4. Re-install your dependencies
npm install express dotenv cors mssql






C:\Users\W0024618\Desktop\swipeData\employee-ai-insights\node_modules\mssql\



const sql = require('mssql');
const dotenv = require('dotenv');
dotenv.config();

const config = {
  server: process.env.DB_SERVER,
  user: process.env.DB_USER,
  password: process.env.DB_PASSWORD,
  database: process.env.DB_DATABASE,
  options: {
    encrypt: true,
    trustServerCertificate: true,
  },
};

const pool = new sql.ConnectionPool(config);
const poolConnect = pool.connect();

module.exports = { sql, poolConnect, pool };







const { sql, poolConnect } = require('../config/db');

exports.getEmployeeData = async (req, res) => {
  try {
    await poolConnect;
    const request = new sql.Request();

    const result = await request.query(`
      WITH CombinedQuery AS (
        SELECT 
          DATEADD(MINUTE, -1 * t1.[MessageLocaleOffset], t1.[MessageUTC]) AS LocaleMessageTime,
          t1.ObjectName1,
          t1.PartitionName2 AS location,
          t5_card.CardNumber,
          t5_admit.value AS AdmitCode,
          t5_dir.value AS Direction,
          t1.ObjectName2,
          t5_rej.value AS Rejection_Type,
          CASE 
            WHEN t3.Name IN ('Contractor', 'Terminated Contractor') THEN t2.Text12
            ELSE CAST(t2.Int1 AS NVARCHAR)
          END AS EmployeeID,
          t3.Name AS PersonnelType,
          t1.MessageType,
          t1.XmlGUID
        FROM [ACVSUJournal_00010020].[dbo].[ACVSUJournalLog] AS t1
        LEFT JOIN [ACVSCore].[Access].[Personnel] AS t2 ON t1.ObjectIdentity1 = t2.GUID
        LEFT JOIN [ACVSCore].[Access].[PersonnelType] AS t3 ON t2.[PersonnelTypeId] = t3.[ObjectID]
        LEFT JOIN [ACVSUJournal_00010020].[dbo].[ACVSUJournalLogxmlShred] AS t5_admit
          ON t1.XmlGUID = t5_admit.GUID AND t5_admit.Name = 'AdmitCode'
        LEFT JOIN [ACVSUJournal_00010020].[dbo].[ACVSUJournalLogxmlShred] AS t5_dir
          ON t1.XmlGUID = t5_dir.GUID AND t5_dir.Value IN ('InDirection', 'OutDirection')
        LEFT JOIN [ACVSUJournal_00010020].[dbo].[ACVSUJournalLogxml] AS t_xml
          ON t1.XmlGUID = t_xml.GUID
        LEFT JOIN (
          SELECT GUID, [value]
          FROM [ACVSUJournal_00010020].[dbo].[ACVSUJournalLogxmlShred]
          WHERE [Name] IN ('Card', 'CHUID')
        ) AS SCard ON t1.XmlGUID = SCard.GUID
        OUTER APPLY (
          SELECT COALESCE(
            TRY_CAST(t_xml.XmlMessage AS XML).value('(/LogMessage/CHUID/Card)[1]', 'varchar(50)'),
            TRY_CAST(t_xml.XmlMessage AS XML).value('(/LogMessage/CHUID)[1]', 'varchar(50)'),
            SCard.[value]
          ) AS CardNumber
        ) AS t5_card
        LEFT JOIN [ACVSUJournal_00010020].[dbo].[ACVSUJournalLogxmlShred] AS t5_Rej
          ON t1.XmlGUID = t5_Rej.GUID AND t5_Rej.Name = 'RejectCode'
        WHERE t1.MessageType IN ('CardAdmitted', 'CardRejected')
          AND t1.PartitionName2 = 'APAC.Default'
          AND CONVERT(date, DATEADD(MINUTE, -1 * t1.MessageLocaleOffset, t1.MessageUTC)) >= '2025-01-01'
      )
      SELECT 
        LocaleMessageTime,
        CONVERT(date, LocaleMessageTime) AS Dateonly,
        CONVERT(time(0), LocaleMessageTime) AS Swipe_Time,
        EmployeeID,
        ObjectName1,
        PersonnelType,
        CardNumber,
        AdmitCode,
        Direction,
        ObjectName2 AS Door,
        Rejection_Type
      FROM CombinedQuery
      ORDER BY LocaleMessageTime DESC;
    `);

    res.json(result.recordset);
  } catch (error) {
    console.error('SQL error:', error);
    res.status(500).json({ error: 'Internal Server Error' });
  }
};








this is my sql query current .
so find main db name foe add env. file
alos update remaining file as per query.


WITH CombinedQuery AS(
		SELECT 
	    DATEADD(MINUTE, -1 * t1.[MessageLocaleOffset], t1.[MessageUTC]) AS LocaleMessageTime,
    t1.ObjectName1,
	t1.PartitionName2 As location,
	t5_card.CardNumber,
t5_admit.value AS AdmitCode,
t5_dir.value AS Direction,
    t1.ObjectName2,
	t5_rej.value AS Rejection_Type,
	CASE 
        WHEN t3.Name IN ('Contractor', 'Terminated Contractor') THEN t2.Text12
        ELSE CAST(t2.Int1 AS NVARCHAR)
    END AS "EmployeeID",
    t3.Name AS PersonnelType,
    t1.MessageType,t1.XmlGUID
	FROM
    [ACVSUJournal_00010020].[dbo].[ACVSUJournalLog] AS t1
LEFT JOIN
    [ACVSCore].[Access].[Personnel] AS t2
    ON t1.ObjectIdentity1 = t2.GUID
LEFT JOIN
    [ACVSCore].[Access].[PersonnelType] AS t3
    ON t2.[PersonnelTypeId] = t3.[ObjectID]
LEFT JOIN
    [ACVSUJournal_00010020].[dbo].[ACVSUJournalLogxmlShred] AS t5_admit
    ON t1.XmlGUID = t5_admit.GUID
    AND t5_admit.Name = 'AdmitCode'
LEFT JOIN
    [ACVSUJournal_00010020].[dbo].[ACVSUJournalLogxmlShred] AS t5_dir
    ON t1.XmlGUID = t5_dir.GUID
    AND t5_dir.Value IN ('InDirection', 'OutDirection')
    LEFT JOIN [ACVSUJournal_00010020].[dbo].[ACVSUJournalLogxml] AS t_xml
        ON t1.XmlGUID = t_xml.GUID
    -- Pre-pull shredded “Card” row
    LEFT JOIN (
    SELECT GUID, [value]
    FROM [ACVSUJournal_00010020].[dbo].[ACVSUJournalLogxmlShred]
    WHERE [Name] IN ('Card', 'CHUID')
    ) AS SCard
    ON t1.XmlGUID = SCard.GUID
    /* NEW: three-stage CardNumber resolution */
    OUTER APPLY (
    SELECT COALESCE(
        -- 1) <LogMessage><CHUID><Card>…</Card></CHUID>
        TRY_CAST(t_xml.XmlMessage AS XML)
        .value('(/LogMessage/CHUID/Card)[1]', 'varchar(50)'),
        -- 2) <LogMessage><CHUID>…</CHUID> (no nested <Card>)
        TRY_CAST(t_xml.XmlMessage AS XML)
        .value('(/LogMessage/CHUID)[1]', 'varchar(50)'),
        -- 3) shredded fallback
        SCard.[value]
    ) AS CardNumber
    ) AS t5_card
 
LEFT JOIN
    [ACVSUJournal_00010020].[dbo].[ACVSUJournalLogxmlShred] AS t5_Rej
    ON t1.XmlGUID = t5_Rej.GUID
    AND t5_Rej.Name = 'RejectCode'
 
   
   --include both admits and rejects
   WHERE t1.MessageType IN ('CardAdmitted', 'CardRejected')
   AND t1.PartitionName2 = 'APAC.Default'
   AND CONVERT(date, DATEADD(MINUTE, -1 * t1.MessageLocaleOffset, t1.MessageUTC)) >= '2025-01-01')
 
SELECT 
	LocaleMessageTime,
	Dateonly = Convert(date, LocaleMessageTime), 
	Swipe_Time = CONVERT(time(0), LocaleMessageTime),
	EmployeeID,
	ObjectName1,
	PersonnelType,
	CardNumber,
	AdmitCode,
	Direction,
	ObjectName2 As Door,
	Rejection_Type
	FROM CombinedQuery
	Order BY LocaleMessageTime DESC;
