// src/App.js

import React, { useEffect, useState } from 'react';
import { Container, Navbar, Nav } from 'react-bootstrap';
import { BrowserRouter, Routes, Route, Link, useLocation } from 'react-router-dom';
import { FaSun, FaMoon } from 'react-icons/fa';

import DashboardHome    from './pages/DashboardHome';
import FloorDetailsPage from './pages/FloorDetailsPage';

import './App.css';

function AppWrapper() {
  const location = useLocation();
  const [theme, setTheme] = useState('dark');

  // Force light on the Floor Details route
  const isFloorPage = location.pathname === '/floor-details';
  const appliedTheme = isFloorPage ? 'light' : theme;

  // SSE for live occupancy
  const [summaryData, setSummaryData]             = useState([]);
  const [floorData, setFloorData]                 = useState([]);
  const [personnelBreakdown, setPersonnelBreakdown] = useState([]);
  const [totalVisitedToday, setTotalVisitedToday] = useState(0);
  const [personnelSummary, setPersonnelSummary]   = useState({ employees: 0, contractors: 0 });
  const [visitedToday, setVisitedToday]           = useState({ employees: 0, contractors: 0, total: 0 });

  useEffect(() => {
    const es = new EventSource('http://localhost:5000/api/live-occupancy-denver');
    es.onmessage = e => {
      try {
        const p = JSON.parse(e.data);
        setSummaryData(p.summary || []);
        setFloorData(p.floorBreakdown || []);
        setPersonnelBreakdown(p.personnelBreakdown || []);
        setTotalVisitedToday(p.totalVisitedToday || 0);
        setPersonnelSummary(p.personnelSummary || { employees: 0, contractors: 0 });
        setVisitedToday(p.visitedToday || { employees: 0, contractors: 0, total: 0 });
      } catch (err) {
        console.error('SSE parse error:', err);
      }
    };
    es.onerror = err => {
      console.error('SSE error:', err);
      es.close();
    };
    return () => es.close();
  }, []);

  const toggleTheme = e => {
    e.preventDefault();
    setTheme(t => (t === 'dark' ? 'light' : 'dark'));
  };

  return (
    <div className={`${appliedTheme}-theme`}>
      <Navbar
        bg={appliedTheme === 'dark' ? 'dark' : 'light'}
        variant={appliedTheme === 'dark' ? 'dark' : 'light'}
        expand="lg"
        className="px-4 navbar-infographic"
      >
        <Navbar.Brand as={Link} to="/" className="wu-brand">
          Live Occupancy â€” Western Union Denver
        </Navbar.Brand>
        <Nav className="ms-auto align-items-center">
          <Nav.Link as={Link} to="/" className="nav-item-infographic">
            Dashboard
          </Nav.Link>
          <Nav.Link as={Link} to="/floor-details" className="nav-item-infographic">
            Floor Details
          </Nav.Link>
          <Nav.Link
            href="#"
            onClick={toggleTheme}
            className="theme-toggle-icon"
            title="Toggle dark/light theme"
          >
            {appliedTheme === 'dark' ? <FaSun /> : <FaMoon />}
          </Nav.Link>
        </Nav>
      </Navbar>

      <Container fluid className="mt-4">
        <Routes>
          <Route
            path="/"
            element={
              <DashboardHome
                personnelSummary={personnelSummary}
                totalVisitedToday={totalVisitedToday}
                visitedToday={visitedToday}
                floorData={floorData}
                personnelBreakdown={personnelBreakdown}
                theme={appliedTheme}
              />
            }
          />
          <Route
            path="/floor-details"
            element={<FloorDetailsPage floorData={floorData} />}
          />
        </Routes>
      </Container>
    </div>
  );
}

export default function App() {
  return (
    <BrowserRouter>
      <AppWrapper />
    </BrowserRouter>
  );
}

