// src/components/ZoneBreakdownTable.jsx
import React from 'react';
import { Table } from 'react-bootstrap';

function ZoneBreakdownTable({ data }) {
  if (!data || !data.length) return <p>No zone breakdown data available.</p>;

  // Get all unique personnel types across all zones
  const personnelTypes = Array.from(
    new Set(
      data.flatMap(zone => Object.keys(zone).filter(k => k !== 'zone' && k !== 'total'))
    )
  );

  return (
    <Table striped bordered hover responsive>
      <thead>
        <tr>
          <th>Zone</th>
          {personnelTypes.map((ptype) => (
            <th key={ptype}>{ptype}</th>
          ))}
          <th>Total</th>
        </tr>
      </thead>
      <tbody>
        {data.map((zoneRow, idx) => (
          <tr key={idx}>
            <td>{zoneRow.zone}</td>
            {personnelTypes.map((ptype) => (
              <td key={ptype}>{zoneRow[ptype] || 0}</td>
            ))}
            <td>{zoneRow.total}</td>
          </tr>
        ))}
      </tbody>
    </Table>
  );
}

export default ZoneBreakdownTable;












// src/App.js
import React, { useEffect, useState } from 'react';
import { Container, Navbar, Nav } from 'react-bootstrap';
import { BrowserRouter, Routes, Route, Link } from 'react-router-dom';

import SummaryChart from './components/SummaryChart';
import ZoneDetailsTable from './components/ZoneDetailsTable';
import FloorOccupancyChart from './components/FloorOccupancyChart'; // <-- added

import './App.css';

function DashboardHome({ summaryData, detailsData, floorData }) {
  return (
    <>
      <h2 className="mb-4">Occupancy Summary</h2>
      <SummaryChart summary={summaryData} />

      <h2 className="mb-4">Floor Occupancy</h2>
      <FloorOccupancyChart data={floorData} /> {/* <-- added */}

      <h2 className="mb-4">Zone Details (Preview)</h2>
      <ZoneDetailsTable data={detailsData} />
      <div className="mt-3">
        <Link to="/details" className="btn btn-primary">
          View Full Zone Details
        </Link>
      </div>
    </>
  );
}

function ZoneDetailsPage({ detailsData }) {
  return (
    <>
      <div className="d-flex justify-content-between align-items-center mb-4">
        <h2>Zone Details</h2>
        <Link to="/" className="btn btn-secondary">
          ← Back to Dashboard
        </Link>
      </div>
      <ZoneDetailsTable data={detailsData} />
    </>
  );
}

function App() {
  const [summaryData, setSummaryData] = useState([]);
  const [detailsData, setDetailsData] = useState({});
  const [floorData, setFloorData] = useState([]); // <-- added

  useEffect(() => {
    const es = new EventSource('http://localhost:5000/api/live-occupancy');
    es.onmessage = (e) => {
      try {
        const payload = JSON.parse(e.data);
        setSummaryData(payload.summary || []);
        setDetailsData(payload.details || {});
        setFloorData(payload.floorBreakdown || []); // <-- added
      } catch (err) {
        console.error('SSE parse error:', err);
      }
    };
    es.onerror = (err) => {
      console.error('SSE error:', err);
      es.close();
    };
    return () => es.close();
  }, []);

  return (
    <BrowserRouter>
      <Navbar bg="dark" variant="dark" expand="lg" className="px-4">
        <Navbar.Brand as={Link} to="/" style={{ color: 'var(--wu-yellow)' }}>
          Live Occupancy — Western Union
        </Navbar.Brand>
        <Nav className="ms-auto">
          <Nav.Link as={Link} to="/" style={{ color: '#fff' }}>
            Dashboard
          </Nav.Link>
          <Nav.Link as={Link} to="/details" style={{ color: '#fff' }}>
            Details
          </Nav.Link>
        </Nav>
      </Navbar>

      <Container fluid className="mt-4">
        <Routes>
          <Route
            path="/"
            element={
              <DashboardHome
                summaryData={summaryData}
                detailsData={detailsData}
                floorData={floorData} // <-- added
              />
            }
          />
          <Route
            path="/details"
            element={<ZoneDetailsPage detailsData={detailsData} />}
          />
        </Routes>
      </Container>
    </BrowserRouter>
  );
}

export default App;











// src/App.js
import React, { useEffect, useState } from 'react';
import { Container, Navbar, Nav } from 'react-bootstrap';
import { BrowserRouter, Routes, Route, Link } from 'react-router-dom';

import SummaryChart from './components/SummaryChart';
import ZoneDetailsTable from './components/ZoneDetailsTable';

import './App.css';

function DashboardHome({ summaryData, detailsData }) {
  return (
    <>
      <h2 className="mb-4">Occupancy Summary</h2>
      <SummaryChart summary={summaryData} />

      <h2 className="mb-4">Zone Details (Preview)</h2>
      {/* Small preview; link to full details page */}
      <ZoneDetailsTable data={detailsData} />
      <div className="mt-3">
        <Link to="/details" className="btn btn-primary">
          View Full Zone Details
        </Link>
      </div>
    </>
  );
}

function ZoneDetailsPage({ detailsData }) {
  return (
    <>
      <div className="d-flex justify-content-between align-items-center mb-4">
        <h2>Zone Details</h2>
        <Link to="/" className="btn btn-secondary">
          ← Back to Dashboard
        </Link>
      </div>
      <ZoneDetailsTable data={detailsData} />
    </>
  );
}

function App() {
  const [summaryData, setSummaryData] = useState([]);
  const [detailsData, setDetailsData] = useState({});

  useEffect(() => {
    const es = new EventSource('http://localhost:5000/api/live-occupancy');
    es.onmessage = (e) => {
      try {
        const payload = JSON.parse(e.data);
        setSummaryData(payload.summary || []);
        setDetailsData(payload.details || {});
      } catch (err) {
        console.error('SSE parse error:', err);
      }
    };
    es.onerror = (err) => {
      console.error('SSE error:', err);
      es.close();
    };
    return () => es.close();
  }, []);

  return (
    <BrowserRouter>
      <Navbar bg="dark" variant="dark" expand="lg" className="px-4">
        <Navbar.Brand as={Link} to="/" style={{ color: 'var(--wu-yellow)' }}>
          Live Occupancy — Western Union
        </Navbar.Brand>
        <Nav className="ms-auto">
          <Nav.Link as={Link} to="/" style={{ color: '#fff' }}>
            Dashboard
          </Nav.Link>
          <Nav.Link as={Link} to="/details" style={{ color: '#fff' }}>
            Details
          </Nav.Link>
        </Nav>
      </Navbar>

      <Container fluid className="mt-4">
        <Routes>
          <Route
            path="/"
            element={
              <DashboardHome
                summaryData={summaryData}
                detailsData={detailsData}
              />
            }
          />
          <Route
            path="/details"
            element={<ZoneDetailsPage detailsData={detailsData} />}
          />
        </Routes>
      </Container>
    </BrowserRouter>
  );
}

export default App;

