Read all file Carefully and i want Display all Compobents file use Infographic theme, Use Diffrent and Unique Colours to Show Chart as well Floor Details data .
Give me Updated js file carefully .add legends for all 


C:\Users\W0024618\Desktop\swipeData\client-denver\src\components\FloorDetailsTable.jsx


import React from 'react';

/**
 * Expects `data` to be an array of:
 *   { floor: string, total: number, occupants: Array<{ ObjectName1, EmployeeID, Swipe_Time, PersonnelType, Door }> }
 */
export default function FloorDetailsTable({ data = [] }) {
  // Only render when data is the grouped floor shape
  if (!Array.isArray(data) || data.length === 0 || !data[0].floor || !Array.isArray(data[0].occupants)) {
    return <p>No floor detail data available.</p>;
  }

  return (
    <div className="floor-details-table">
      {data.map(({ floor, total, occupants }) => (
        <section key={floor}>
          <h3>{floor} (Total: {total})</h3>
          <table>
            <thead>
              <tr>
                <th>Name</th>
                <th>Employee ID</th>
                <th>Swipe Time</th>
                <th>Personnel Type</th>
                <th>Door</th>
              </tr>
            </thead>
            <tbody>
              {occupants.map((emp, idx) => (
                <tr key={`${emp.EmployeeID}-${idx}`}>
                  <td>{emp.ObjectName1}</td>
                  <td>{emp.EmployeeID}</td>
                  <td>{emp.Swipe_Time}</td>
                  <td>{emp.PersonnelType}</td>
                  <td>{emp.Door}</td>
                </tr>
              ))}
            </tbody>
          </table>
        </section>
      ))}
    </div>
  );
}





C:\Users\W0024618\Desktop\swipeData\client-denver\src\components\FloorOccupancyChart.jsx


// src/components/FloorOccupancyChart.jsx
import React from 'react';
import {
  BarChart,
  Bar,
  XAxis,
  YAxis,
  Tooltip,
  ResponsiveContainer,
  CartesianGrid,
  Legend
} from 'recharts';
import { Card } from 'react-bootstrap';

export default function FloorOccupancyChart({ data = [] }) {
  if (!data.length) {
    return <Card body>No floor data available</Card>;
  }

  return (
    <Card className="mb-4">
      <Card.Header>Floor-wise Occupancy</Card.Header>
      <Card.Body style={{ height: 350 }}>
        <ResponsiveContainer width="100%" height="100%">
          <BarChart data={data} margin={{ top: 20, right: 30, left: 0, bottom: 5 }}>
            <CartesianGrid strokeDasharray="3 3" />
            <XAxis dataKey="floor" tick={{ fontSize: 12 }} />
            <YAxis tick={{ fontSize: 12 }} />
            <Tooltip />
            <Legend verticalAlign="bottom" />
            {/* Single series on the `total` property */}
            <Bar
              dataKey="total"
              name="Total Occupancy"
              fill="#007bff"
              radius={[8, 8, 0, 0]}
            />
          </BarChart>
        </ResponsiveContainer>
      </Card.Body>
    </Card>
  );
}




C:\Users\W0024618\Desktop\swipeData\client-denver\src\components\PersonnelDonutChart.jsx


// src/components/PersonnelDonutChart.jsx
import React from 'react';
import {
  PieChart,
  Pie,
  Cell,
  Tooltip,
  ResponsiveContainer,
  Legend,
  Label
} from 'recharts';
import { Card } from 'react-bootstrap';

const COLORS = ['#007bff', '#28a745', '#fd7e14', '#6f42c1'];

export default function PersonnelDonutChart({ data = [] }) {
  const total = data.reduce((sum, entry) => sum + entry.count, 0);

  if (!data.length || total === 0) {
    return <Card body>No personnel data available</Card>;
  }

  return (
    <Card className="mb-4">
      <Card.Header>Personnel Type Occupancy</Card.Header>
      <Card.Body style={{ height: 350 }}>
        <ResponsiveContainer width="100%" height="100%">
          <PieChart>
            <Pie
              data={data}
              dataKey="count"
              nameKey="personnelType"
              cx="50%"
              cy="50%"
              innerRadius={60}
              outerRadius={100}
              paddingAngle={4}
              labelLine={false}
              label={({ name, percent }) =>
                `${name}: ${(percent * 100).toFixed(0)}%`
              }
            >
              {data.map((entry, idx) => (
                <Cell key={idx} fill={COLORS[idx % COLORS.length]} />
              ))}
              <Label
                value={total}
                position="center"
                style={{ fontSize: '1.5rem', fontWeight: 'bold' }}
              />
            </Pie>
            <Tooltip formatter={(value) => [`${value}`, 'Count']} />
            <Legend verticalAlign="bottom" wrapperStyle={{ paddingTop: 10 }} />
          </PieChart>
        </ResponsiveContainer>
      </Card.Body>
    </Card>
  );
}




// src/components/PersonnelTypeBreakdownTable.jsx


import React from 'react';
import { Table } from 'react-bootstrap';

export default function PersonnelTypeBreakdownTable({ data }) {
  if (!data || data.length === 0) {
    return <p>No data available for personnel types.</p>;
  }

  return (
    <Table striped bordered hover responsive>
      <thead>
        <tr>
          <th>Personnel Type</th>
          <th>Count</th>
        </tr>
      </thead>
      <tbody>
        {data.map((entry, idx) => (
          <tr key={idx}>
            <td>{entry.type}</td>
            <td>{entry.count}</td>
          </tr>
        ))}
      </tbody>
    </Table>
  );
}




C:\Users\W0024618\Desktop\swipeData\client-denver\src\components\SummaryCards.jsx




import React from 'react';
import { Card, Row, Col } from 'react-bootstrap';
import { FaUsers, FaUserTie, FaHardHat } from 'react-icons/fa';

const SummaryCards = ({
  totalOccupancy,
  employeeCount,
  contractorCount,
  totalVisitedToday,
  employeesVisitedToday,
  contractorsVisitedToday
}) => {
 const cards = [

  {
    title: 'Total Visited Today',
    value: totalVisitedToday,
    icon: <FaUsers size={24} />,
    color: '#6f42c1'
  },
  {
    title: 'Employees Visited Today',
    value: employeesVisitedToday,
    icon: <FaUserTie size={24} />,
    color: '#20c997'
  },
  {
    title: 'Contractors Visited Today',
    value: contractorsVisitedToday,
    icon: <FaHardHat size={24} />,
    color: '#ffc107'
  
  },


  {
    title: 'Total Occupancy (Current)',
    value: totalOccupancy,
    icon: <FaUsers size={24} />,
    color: '#007bff'
  },

  {
    title: 'Employees Occupancy (Current)',
    value: employeeCount,
    icon: <FaUserTie size={24} />,
    color: '#28a745'
  },


  {
    title: 'Contractors Occupancy (Current)',
    value: contractorCount,
    icon: <FaHardHat size={24} />,
    color: '#fd7e14'
  },

];

  return (
    <Row className="mb-4">
      {cards.map((card, idx) => (
        <Col key={idx} sm={6} md={3} className="mb-3">
          <Card
            className="text-center shadow-sm"
            style={{ borderLeft: `5px solid ${card.color}` }}
          >
            <Card.Body>
              <div className="mb-2" style={{ color: card.color }}>
                {card.icon}
              </div>
              <Card.Title>{card.title}</Card.Title>
              <Card.Text style={{ fontSize: '1.6rem', fontWeight: 'bold' }}>
                {card.value}
              </Card.Text>
            </Card.Body>
          </Card>
        </Col>
      ))}
    </Row>
  );
};

export default SummaryCards;





C:\Users\W0024618\Desktop\swipeData\client-denver\src\components\SummaryChart.jsx


// src/components/SummaryChart.jsx
import React, { useEffect } from 'react';
import {
  BarChart,
  Bar,
  XAxis,
  YAxis,
  Tooltip,
  CartesianGrid,
  ResponsiveContainer,
  Legend,
  defs,
  linearGradient,
  stop
} from 'recharts';
import { Card } from 'react-bootstrap';

export default function SummaryChart({ summary = [] }) {
  useEffect(() => {
    console.log('Summary Chart Data:', summary);
  }, [summary]);

  return (
    <Card className="mb-4">
      <Card.Header>Zone-wise Occupancy</Card.Header>
      <Card.Body style={{ height: 350 }}>
        <ResponsiveContainer width="100%" height="100%">
          <BarChart data={summary} margin={{ top: 20, right: 30, left: 0, bottom: 5 }}>
            <defs>
              <linearGradient id="zoneGradient" x1="0" y1="0" x2="0" y2="1">
                <stop offset="5%" stopColor="#007bff" stopOpacity={0.8}/>
                <stop offset="95%" stopColor="#007bff" stopOpacity={0.2}/>
              </linearGradient>
            </defs>
            <CartesianGrid strokeDasharray="3 3" />
            <XAxis dataKey="zone" tick={{ fontSize: 12 }} />
            <YAxis allowDecimals={false} tick={{ fontSize: 12 }} />
            <Tooltip />
            <Legend wrapperStyle={{ bottom: 0 }} />
            <Bar
              dataKey="count"
              name="Count"
              fill="url(#zoneGradient)"
              radius={[8, 8, 0, 0]}
            />
          </BarChart>
        </ResponsiveContainer>
      </Card.Body>
    </Card>
  );
}
