// C:\Users\W0024618\Desktop\swipeData\client-denver\src\App.js

import React, { useEffect, useState } from 'react';
import { Container, Navbar, Nav } from 'react-bootstrap';
import { BrowserRouter, Routes, Route, Link } from 'react-router-dom';
import { FaSun } from 'react-icons/fa';

import DashboardHome from './pages/DashboardHome';
import FloorDetailsPage from './pages/FloorDetailsPage';
import DenverInOutInconsistencyPage from './pages/DenverInOutInconsistency'; // ← NEW

import './App.css';

export default function App() {
  // live data states
  const [floorData, setFloorData] = useState([]);
  const [personnelBreakdown, setPersonnelBreakdown] = useState([]);
  const [totalVisitedToday, setTotalVisitedToday] = useState(0);
  const [personnelSummary, setPersonnelSummary] = useState({ employees: 0, contractors: 0 });
  const [visitedToday, setVisitedToday] = useState({ employees: 0, contractors: 0, total: 0 });
  const [floorInOutSummary, setFloorInOutSummary] = useState([]); // ← NEW

  // new: in/out inconsistency data
  const [inOutData, setInOutData] = useState(null);
  const [loadingInOut, setLoadingInOut] = useState(true);
  const [inOutError, setInOutError] = useState(null);

  useEffect(() => {
    const es = new EventSource('http://localhost:5000/api/live-occupancy-denver');
    es.onmessage = e => {
      try {
        const p = JSON.parse(e.data);
        setFloorData(p.floorBreakdown || []);
        setPersonnelBreakdown(p.personnelBreakdown || []);
        setTotalVisitedToday(p.totalVisitedToday || 0);
        setPersonnelSummary(p.personnelSummary || { employees: 0, contractors: 0 });
        setVisitedToday(p.visitedToday || { employees: 0, contractors: 0, total: 0 });
        setFloorInOutSummary(p.floorInOutSummary || []); // ← NEW
      } catch (err) {
        console.error('SSE parse error:', err);
      }
    };
    es.onerror = err => {
      console.error('SSE error:', err);
      es.close();
    };
    return () => es.close();
  }, []);

  // Fetch once: in/out inconsistency JSON
  useEffect(() => {
    fetch('http://localhost:5000/api/inout-inconsistency-denver')
      .then(res => {
        if (!res.ok) throw new Error(`HTTP ${res.status} - ${res.statusText}`);
        return res.json();
      })
      .then(data => {
        setInOutData(data);
        setLoadingInOut(false);
      })
      .catch(err => {
        console.error('Failed to load in/out inconsistency:', err);
        setInOutError(err.message);
        setLoadingInOut(false);
      });
  }, []);

  return (
    <BrowserRouter>
      <div className="dark-theme">
        <Navbar bg="dark" variant="dark" expand="lg" className="px-4 navbar-infographic">
          <Navbar.Brand as={Link} to="/" className="wu-brand">
            Live Occupancy — Western Union Denver
          </Navbar.Brand>
          <Nav className="ms-auto align-items-center">
            <Nav.Link as={Link} to="/" className="nav-item-infographic">
              Dashboard
            </Nav.Link>
            <Nav.Link as={Link} to="/floor-details" className="nav-item-infographic">
              Floor Details
            </Nav.Link>
            <Nav.Link as={Link} to="/inout-inconsistency-denver" className="nav-item-infographic">
              In/Out Inconsistency
            </Nav.Link>
            <Nav.Link className="theme-toggle-icon" title="Dark mode only">
              <FaSun color="#FFC72C" />
            </Nav.Link>
          </Nav>
        </Navbar>

        <Container fluid className="mt-4">
          <Routes>
            <Route
              path="/"
              element={
                <DashboardHome
                  personnelSummary={personnelSummary}
                  totalVisitedToday={totalVisitedToday}
                  visitedToday={visitedToday}
                  floorData={floorData}
                  personnelBreakdown={personnelBreakdown}
                  floorInOutSummary={floorInOutSummary}
                />
              }
            />

            <Route
              path="/floor-details"
              element={
                <FloorDetailsPage
                  floorData={floorData}
                  floorInOutSummary={floorInOutSummary}
                />
              }
            />

            <Route
              path="/inout-inconsistency-denver"
              element={
                <DenverInOutInconsistencyPage
                  data={inOutData}
                  loading={loadingInOut}
                  error={inOutError}
                />
              }
            />
          </Routes>
        </Container>
      </div>
    </BrowserRouter>
  );
}








// C:\Users\W0024618\Desktop\swipeData\client-denver\src\App.js

import React, { useEffect, useState } from 'react';
import { Container, Navbar, Nav } from 'react-bootstrap';
import { BrowserRouter, Routes, Route, Link } from 'react-router-dom';
import { FaSun } from 'react-icons/fa';

import DashboardHome from './pages/DashboardHome';
import FloorDetailsPage from './pages/FloorDetailsPage';
import DenverInOutInconsistencyPage from './pages/DenverInOutInconsistency'; // ← NEW

import './App.css';

export default function App() {
  // live data states
  const [floorData, setFloorData] = useState([]);
  const [personnelBreakdown, setPersonnelBreakdown] = useState([]);
  const [totalVisitedToday, setTotalVisitedToday] = useState(0);
  const [personnelSummary, setPersonnelSummary] = useState({ employees: 0, contractors: 0 });
  const [visitedToday, setVisitedToday] = useState({ employees: 0, contractors: 0, total: 0 });
  const [floorInOutSummary, setFloorInOutSummary] = useState([]); // ← NEW

  // in/out inconsistency data states
  const [inOutData, setInOutData] = useState(null);
  const [loadingInOut, setLoadingInOut] = useState(true);
  const [inOutError, setInOutError] = useState(null);

  useEffect(() => {
    const es = new EventSource('http://localhost:5000/api/live-occupancy-denver');
    es.onmessage = e => {
      try {
        const p = JSON.parse(e.data);
        setFloorData(p.floorBreakdown || []);
        setPersonnelBreakdown(p.personnelBreakdown || []);
        setTotalVisitedToday(p.totalVisitedToday || 0);
        setPersonnelSummary(p.personnelSummary || { employees: 0, contractors: 0 });
        setVisitedToday(p.visitedToday || { employees: 0, contractors: 0, total: 0 });
        setFloorInOutSummary(p.floorInOutSummary || []); // ← NEW
      } catch (err) {
        console.error('SSE parse error:', err);
      }
    };
    es.onerror = err => {
      console.error('SSE error:', err);
      es.close();
    };
    return () => es.close();
  }, []);

  // Fetch once: in/out inconsistency JSON
  useEffect(() => {
    fetch('http://localhost:5000/api/inout-inconsistency-denver')
      .then(res => {
        if (!res.ok) throw new Error(`HTTP ${res.status} - ${res.statusText}`);
        return res.json();
      })
      .then(data => {
        setInOutData(data);
        setLoadingInOut(false);
      })
      .catch(err => {
        console.error('Failed to load in/out inconsistency:', err);
        setInOutError(err.message);
        setLoadingInOut(false);
      });
  }, []);

  return (
    <BrowserRouter>
      <div className="dark-theme">
        <Navbar bg="dark" variant="dark" expand="lg" className="px-4 navbar-infographic">
          <Navbar.Brand as={Link} to="/" className="wu-brand">
            Live Occupancy — Western Union Denver
          </Navbar.Brand>
          <Nav className="ms-auto align-items-center">
            <Nav.Link as={Link} to="/" className="nav-item-infographic">
              Dashboard
            </Nav.Link>
            <Nav.Link as={Link} to="/floor-details" className="nav-item-infographic">
              Floor Details
            </Nav.Link>
            <Nav.Link as={Link} to="/inout-inconsistency-denver" className="nav-item-infographic">
              In/Out Inconsistency
            </Nav.Link>
            <Nav.Link className="theme-toggle-icon" title="Dark mode only">
              <FaSun color="#FFC72C" />
            </Nav.Link>
          </Nav>
        </Navbar>

        <Container fluid className="mt-4">
          <Routes>
            <Route
              path="/"
              element={
                <DashboardHome
                  personnelSummary={personnelSummary}
                  totalVisitedToday={totalVisitedToday}
                  visitedToday={visitedToday}
                  floorData={floorData}
                  personnelBreakdown={personnelBreakdown}
                  floorInOutSummary={floorInOutSummary}
                />
              }
            />

            <Route
              path="/floor-details"
              element={
                <FloorDetailsPage
                  floorData={floorData}
                  floorInOutSummary={floorInOutSummary}
                />
              }
            />

            <Route
              path="/inout-inconsistency-denver"
              element={
                <DenverInOutInconsistencyPage
                  data={inOutData}
                  loading={loadingInOut}
                  error={inOutError}
                />
              }
            />
          </Routes>
        </Container>
      </div>
    </BrowserRouter>
  );
}





ompiled with problems:
×
ERROR
[eslint] 
src\App.js
  Line 122:37:  React Hook "useState" cannot be called at the top level. React Hooks must be called in a React function component or a custom React Hook function  react-hooks/rules-of-hooks
  Line 123:43:  React Hook "useState" cannot be called at the top level. React Hooks must be called in a React function component or a custom React Hook function  react-hooks/rules-of-hooks
  Line 124:39:  React Hook "useState" cannot be called at the top level. React Hooks must be called in a React function component or a custom React Hook function  react-hooks/rules-of-hooks
  Line 127:1:   Import in body of module; reorder to top                                                                                                           import/first
  Line 235:18:  'DenverInOutInconsistency' is not defined                                                                                                          react/jsx-no-undef

Search for the keywords to learn more about each error.


SOlve above issue and give me updated js file carefully , dont make another changes carefully,

//C:\Users\W0024618\Desktop\swipeData\client-denver\src\App.js

import React, { useEffect, useState } from 'react';
import { Container, Navbar, Nav } from 'react-bootstrap';
import { BrowserRouter, Routes, Route, Link } from 'react-router-dom';
import { FaSun } from 'react-icons/fa';

import DashboardHome    from './pages/DashboardHome';
import FloorDetailsPage from './pages/FloorDetailsPage';
import DenverInOutInconsistencyPage  from './pages/DenverInOutInconsistency'; // ← NEW

 // new: in/out inconsistency data
  const [inOutData, setInOutData] = useState(null);
  const [loadingInOut, setLoadingInOut] = useState(true);
  const [inOutError, setInOutError] = useState(null);


import './App.css';

export default function App() {
  // live data states
  // const [summaryData, setSummaryData]               = useState([]);
  const [floorData, setFloorData]                   = useState([]);
  const [personnelBreakdown, setPersonnelBreakdown] = useState([]);
  const [totalVisitedToday, setTotalVisitedToday]   = useState(0);
  const [personnelSummary, setPersonnelSummary]     = useState({ employees: 0, contractors: 0 });
  const [visitedToday, setVisitedToday]             = useState({ employees: 0, contractors: 0, total: 0 });
  const [floorInOutSummary, setFloorInOutSummary]   = useState([]); // ← NEW
  

  useEffect(() => {
    const es = new EventSource('http://localhost:5000/api/live-occupancy-denver');
    es.onmessage = e => {
      try {
        const p = JSON.parse(e.data);
        // setSummaryData(p.summary || []);
        setFloorData(p.floorBreakdown || []);
        setPersonnelBreakdown(p.personnelBreakdown || []);
        setTotalVisitedToday(p.totalVisitedToday || 0);
        setPersonnelSummary(p.personnelSummary || { employees: 0, contractors: 0 });
        setVisitedToday(p.visitedToday || { employees: 0, contractors: 0, total: 0 });
        setFloorInOutSummary(p.floorInOutSummary || []); // ← NEW
      } catch (err) {
        console.error('SSE parse error:', err);
      }
    };
    es.onerror = err => {
      console.error('SSE error:', err);
      es.close();
    };
    return () => es.close();
  }, []);


 // Fetch once: in/out inconsistency JSON
  useEffect(() => {
    fetch('http://localhost:5000/api/inout-inconsistency-denver')
      .then(res => {
        if (!res.ok) throw new Error(`HTTP ${res.status} - ${res.statusText}`);
        return res.json();
      })
      .then(data => {
        setInOutData(data);
        setLoadingInOut(false);
      })
      .catch(err => {
        console.error('Failed to load in/out inconsistency:', err);
        setInOutError(err.message);
        setLoadingInOut(false);
      });
  }, []);


    return (
    <BrowserRouter>
      <div className="dark-theme">
        <Navbar bg="dark" variant="dark" expand="lg" className="px-4 navbar-infographic">
          <Navbar.Brand as={Link} to="/" className="wu-brand">
            Live Occupancy — Western Union Denver
          </Navbar.Brand>
          <Nav className="ms-auto align-items-center">
            <Nav.Link as={Link} to="/" className="nav-item-infographic">
              Dashboard
            </Nav.Link>
            <Nav.Link as={Link} to="/floor-details" className="nav-item-infographic">
              Floor Details
            </Nav.Link>
            <Nav.Link as={Link} to="/inout-inconsistency-denver" className="nav-item-infographic">
              In/Out Inconsistency
            </Nav.Link>
            <Nav.Link className="theme-toggle-icon" title="Dark mode only">
              <FaSun color="#FFC72C" />
            </Nav.Link>
          </Nav>
        </Navbar>

        <Container fluid className="mt-4">
          <Routes>
            <Route
              path="/"
              element={
                <DashboardHome
                  personnelSummary={personnelSummary}
                  totalVisitedToday={totalVisitedToday}
                  visitedToday={visitedToday}
                  floorData={floorData}
                  personnelBreakdown={personnelBreakdown}
                  floorInOutSummary={floorInOutSummary}
                />
              }
            />

            <Route
              path="/floor-details"
              element={
                <FloorDetailsPage
                  floorData={floorData}
                  floorInOutSummary={floorInOutSummary}
                />
              }
            />

            <Route
              path="/inout-inconsistency-denver"
              element={
                <DenverInOutInconsistency
                  data={inOutData}
                  loading={loadingInOut}
                  error={inOutError}
                />
              }
            />
          </Routes>
        </Container>
      </div>
    </BrowserRouter>
  );
}





// src/pages/DenverInOutInconsistency.jsx


import React, { useEffect, useState } from 'react';

export default function DenverInOutInconsistencyPage({ data }) {
  // If you want to re-fetch inside this component rather than rely on App.js, do it like this:
  // (But if you’re already passing “data” from App.js via props, you don’t need another fetch.)

  const [inconsistencyList, setInconsistencyList] = useState(data || []);

  // ONLY use this useEffect if you want to fetch here directly:
  useEffect(() => {
    fetch('http://localhost:5000/api/inout-inconsistency-denver')
      .then((res) => {
        if (!res.ok) {
          throw new Error(`HTTP ${res.status}`);
        }
        return res.json();
      })
      .then((json) => {
        setInconsistencyList(json || []);
      })
      .catch((err) => {
        console.error('Failed to fetch in/out inconsistency:', err);
      });
  }, []);

  return (
    <div>
      <h2>Denver In/Out Inconsistency</h2>
      {inconsistencyList.length === 0 ? (
        <p>No inconsistency data available.</p>
      ) : (
        <table className="table table-striped">
          <thead>
            <tr>
              <th>Date</th>
              <th>Floor</th>
              <th>Total Persons</th>
              <th>Inconsistent Count</th>
              <th>Inconsistency %</th>
            </tr>
          </thead>
          <tbody>
            {inconsistencyList.map((row) => (
              <tr key={`${row.date}-${row.floor}`}>
                <td>{row.date}</td>
                <td>{row.floor}</td>
                <td>{row.totalPersons}</td>
                <td>{row.inconsistentCount}</td>
                <td>{row.inconsistencyPercentage}%</td>
              </tr>
            ))}
          </tbody>
        </table>
      )}
    </div>
  );
}

