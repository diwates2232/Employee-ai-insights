npm install @mui/material @emotion/react @emotion/styled

npm install @mui/icons-material



import React from 'react';
import {
  BarChart,
  Bar,
  XAxis,
  YAxis,
  Tooltip,
  ResponsiveContainer,
  Legend,
  CartesianGrid
} from 'recharts';
import { Card, CardContent, Typography } from '@mui/material';

export default function FloorOccupancyChart({ data = [] }) {
  if (!data.length) return <Typography>No data available</Typography>;

  return (
    <Card variant="outlined" sx={{ height: 350 }}>
      <CardContent>
        <Typography variant="h6" gutterBottom>
          Floor-wise Occupancy
        </Typography>
        <ResponsiveContainer width="100%" height={250}>
          <BarChart data={data}>
            <CartesianGrid strokeDasharray="3 3" />
            <XAxis dataKey="floor" />
            <YAxis />
            <Tooltip />
            <Legend />
            <Bar dataKey="Contractor" stackId="a" fill="#007bff" />
            <Bar dataKey="Property Management" stackId="a" fill="#28a745" />
            {/* Add more personnel types if needed */}
          </BarChart>
        </ResponsiveContainer>
      </CardContent>
    </Card>
  );
}












import React from 'react';
import { Container, Row, Col, Card } from 'react-bootstrap';

import SummaryCards from '../components/SummaryCards';
import FloorOccupancyChart from '../components/FloorOccupancyChart';
import SummaryChart from '../components/SummaryChart';
import PersonnelDonutChart from '../components/PersonnelDonutChart';

export default function DashboardHome({
  personnelSummary,      // { employees: number, contractors: number }
  totalVisitedToday,     // number
  floorData,             // [{ floor, total }]
  zoneSummaryData,       // [{ zone, count }]
  personnelBreakdown     // [{ zone, PersonnelType: count }]
}) {
  const employees = personnelSummary?.employees ?? 0;
  const contractors = personnelSummary?.contractors ?? 0;
  const totalOccupancy = employees + contractors;

  // Flatten personnel breakdown into chart data
  const personnelTypeCounts = {};
  personnelBreakdown.forEach((item) => {
    Object.entries(item).forEach(([key, value]) => {
      if (key !== 'zone') {
        personnelTypeCounts[key] = (personnelTypeCounts[key] || 0) + value;
      }
    });
  });

  const chartData = Object.entries(personnelTypeCounts).map(([personnelType, count]) => ({
    personnelType,
    count
  }));

  return (
    <Container fluid className="py-4">
      {/* 0. Top Summary Cards */}
      <SummaryCards
        totalOccupancy={totalOccupancy}
        employeeCount={employees}
        contractorCount={contractors}
        totalVisitedToday={totalVisitedToday}
      />

      {/* Three‚Äêchart row */}
      <Row className="g-4">
        {/* 1. Floor-wise Occupancy */}
        <Col md={4}>
          <Card className="h-100">
            <Card.Header>Floor-wise Occupancy</Card.Header>
            <Card.Body style={{ height: 300 }}>
              <FloorOccupancyChart data={floorData} />
            </Card.Body>
          </Card>
        </Col>

        {/* 2. Zone-wise Occupancy */}
        <Col md={4}>
          <Card className="h-100">
            <Card.Header>Zone-wise Occupancy</Card.Header>
            <Card.Body style={{ height: 300 }}>
              <SummaryChart summary={zoneSummaryData} />
            </Card.Body>
          </Card>
        </Col>

        {/* 3. Personnel Type Occupancy */}
        <Col md={4}>
          <Card className="h-100">
            <Card.Header>Personnel Type Occupancy</Card.Header>
            <Card.Body style={{ height: 300 }}>
              <PersonnelDonutChart data={chartData} />
            </Card.Body>
          </Card>
        </Col>
      </Row>
    </Container>
  );
}











// src/components/PersonnelDonutChart.jsx



import React from 'react';
import {
  PieChart,
  Pie,
  Cell,
  Tooltip,
  ResponsiveContainer,
  Legend
} from 'recharts';

// You can tweak these colors or map by type
const COLORS = ['#28a745', '#fd7e14', '#007bff', '#6f42c1'];

export default function PersonnelDonutChart({ data = [] }) {
  if (!data.length) return <p>No data to display</p>;

  return (
    <ResponsiveContainer width="100%" height="100%">
      <PieChart>
        <Pie
          data={data}
          dataKey="count"
          nameKey="personnelType"
          cx="50%"
          cy="50%"
          innerRadius={50}
          outerRadius={80}
          label
        >
          {data.map((entry, idx) => (
            <Cell key={idx} fill={COLORS[idx % COLORS.length]} />
          ))}
        </Pie>
        <Tooltip />
        <Legend verticalAlign="bottom" height={36} />
      </PieChart>
    </ResponsiveContainer>
  );
}



for more details check API responce

data: {"asOf":"2025-05-18T01:05:20.323Z","summary":[{"zone":"Reception Area","count":1},{"zone":"GSOC","count":2},{"zone":"YELLOW Zone","count":1}],"zoneBreakdown":[{"zone":"Reception Area","Property Management":1,"total":1},{"zone":"GSOC","Contractor":2,"total":2},{"zone":"YELLOW Zone","Contractor":1,"total":1}],"floorBreakdown":[{"floor":"Podium Floor, Pune","Property Management":1,"Contractor":3,"total":4}],"details":{"Reception Area":[{"Dateonly":"2025-05-18","Swipe_Time":"06:35:19","EmployeeID":"0","ObjectName1":"Upadhyay, Tribhuwan","CardNumber":"410342","PersonnelType":"Property Management","zone":"Reception Area"}],"GSOC":[{"Dateonly":"2025-05-18","Swipe_Time":"05:36:54","EmployeeID":"75620900","ObjectName1":"Kakade, Aniket Pratap","CardNumber":"619956","PersonnelType":"Contractor","zone":"GSOC"},{"Dateonly":"2025-05-18","Swipe_Time":"05:06:03","EmployeeID":"W0024618","ObjectName1":"Diwate, Swapnil","CardNumber":"619957","PersonnelType":"Contractor","zone":"GSOC"}],"YELLOW Zone":[{"Dateonly":"2025-05-18","Swipe_Time":"06:26:52","EmployeeID":"W0024552","ObjectName1":"Raza, Ahmed","CardNumber":"615795","PersonnelType":"Contractor","zone":"YELLOW Zone"}]},"personnelBreakdown":[{"zone":"Reception Area","Property Management":1},{"zone":"GSOC","Contractor":2},{"zone":"YELLOW Zone","Contractor":1}],"personnelSummary":{"employees":0,"contractors":4},"totalVisitedToday":8}
