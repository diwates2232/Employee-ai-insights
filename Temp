// src/App.js

import React, { useEffect, useState } from 'react';
import { Container, Navbar, Nav } from 'react-bootstrap';
import { BrowserRouter, Routes, Route, Link, useLocation } from 'react-router-dom';
import { FaSun, FaMoon } from 'react-icons/fa';

import DashboardHome    from './pages/DashboardHome';
import FloorDetailsPage from './pages/FloorDetailsPage';

import './App.css';

function AppWrapper() {
  const location = useLocation();
  const [theme, setTheme] = useState('dark');
  const isFloorPage = location.pathname === '/floor-details';
  const appliedTheme = isFloorPage ? 'light' : theme;

  // SSE & data-fetching omitted for brevity…

  const toggleTheme = e => {
    e.preventDefault();
    setTheme(t => (t === 'dark' ? 'light' : 'dark'));
  };

  // Styles for the 3 labels we want black
  const labelBg = { backgroundColor: '#000' };

  return (
    <div className={`${appliedTheme}-theme`}>
      <Navbar
        bg={appliedTheme === 'dark' ? 'dark' : 'light'}
        variant={appliedTheme === 'dark' ? 'dark' : 'light'}
        expand="lg"
        className="px-4 navbar-infographic"
      >
        <Navbar.Brand
          as={Link}
          to="/"
          className="wu-brand"
          style={labelBg}
        >
          Live Occupancy — Western Union Denver
        </Navbar.Brand>

        <Nav className="ms-auto align-items-center">
          <Nav.Link as={Link} to="/" className="nav-item-infographic">
            Dashboard
          </Nav.Link>

          <Nav.Link
            as={Link}
            to="/floor-details"
            className="nav-item-infographic"
            style={labelBg}
          >
            Floor Details
          </Nav.Link>

          <Nav.Link
            href="#"
            onClick={toggleTheme}
            className="theme-toggle-icon"
            title="Toggle dark/light theme"
            style={labelBg}
          >
            {appliedTheme === 'dark' ? <FaSun /> : <FaMoon />}
          </Nav.Link>
        </Nav>
      </Navbar>

      <Container fluid className="mt-4">
        <Routes>
          <Route
            path="/"
            element={
              <DashboardHome
                /* …props… */
                theme={appliedTheme}
              />
            }
          />
          <Route
            path="/floor-details"
            element={<FloorDetailsPage floorData={/*…*/} />}
          />
        </Routes>
      </Container>
    </div>
  );
}

export default function App() {
  return (
    <BrowserRouter>
      <AppWrapper />
    </BrowserRouter>
  );
}


















// src/App.js

import React, { useEffect, useState } from 'react';
import { Container, Navbar, Nav } from 'react-bootstrap';
import { BrowserRouter, Routes, Route, Link, useLocation } from 'react-router-dom';
import { FaSun, FaMoon } from 'react-icons/fa';

import DashboardHome    from './pages/DashboardHome';
import FloorDetailsPage from './pages/FloorDetailsPage';

import './App.css';

function AppWrapper() {
  const location = useLocation();
  const [theme, setTheme] = useState('dark');

  // Force light on the Floor Details route
  const isFloorPage = location.pathname === '/floor-details';
  const appliedTheme = isFloorPage ? 'light' : theme;

  // SSE for live occupancy
  const [summaryData, setSummaryData]             = useState([]);
  const [floorData, setFloorData]                 = useState([]);
  const [personnelBreakdown, setPersonnelBreakdown] = useState([]);
  const [totalVisitedToday, setTotalVisitedToday] = useState(0);
  const [personnelSummary, setPersonnelSummary]   = useState({ employees: 0, contractors: 0 });
  const [visitedToday, setVisitedToday]           = useState({ employees: 0, contractors: 0, total: 0 });

  useEffect(() => {
    const es = new EventSource('http://localhost:5000/api/live-occupancy-denver');
    es.onmessage = e => {
      try {
        const p = JSON.parse(e.data);
        setSummaryData(p.summary || []);
        setFloorData(p.floorBreakdown || []);
        setPersonnelBreakdown(p.personnelBreakdown || []);
        setTotalVisitedToday(p.totalVisitedToday || 0);
        setPersonnelSummary(p.personnelSummary || { employees: 0, contractors: 0 });
        setVisitedToday(p.visitedToday || { employees: 0, contractors: 0, total: 0 });
      } catch (err) {
        console.error('SSE parse error:', err);
      }
    };
    es.onerror = err => {
      console.error('SSE error:', err);
      es.close();
    };
    return () => es.close();
  }, []);

  const toggleTheme = e => {
    e.preventDefault();
    setTheme(t => (t === 'dark' ? 'light' : 'dark'));
  };

  return (
    <div className={`${appliedTheme}-theme`}>
      <Navbar
        bg={appliedTheme === 'dark' ? 'dark' : 'light'}
        variant={appliedTheme === 'dark' ? 'dark' : 'light'}
        expand="lg"
        className="px-4 navbar-infographic"
      >
        <Navbar.Brand as={Link} to="/" className="wu-brand">
          Live Occupancy — Western Union Denver
        </Navbar.Brand>
        <Nav className="ms-auto align-items-center">
          <Nav.Link as={Link} to="/" className="nav-item-infographic">
            Dashboard
          </Nav.Link>
          <Nav.Link as={Link} to="/floor-details" className="nav-item-infographic">
            Floor Details
          </Nav.Link>
          <Nav.Link
            href="#"
            onClick={toggleTheme}
            className="theme-toggle-icon"
            title="Toggle dark/light theme"
          >
            {appliedTheme === 'dark' ? <FaSun /> : <FaMoon />}
          </Nav.Link>
        </Nav>
      </Navbar>

      <Container fluid className="mt-4">
        <Routes>
          <Route
            path="/"
            element={
              <DashboardHome
                personnelSummary={personnelSummary}
                totalVisitedToday={totalVisitedToday}
                visitedToday={visitedToday}
                floorData={floorData}
                personnelBreakdown={personnelBreakdown}
                theme={appliedTheme}
              />
            }
          />
          <Route
            path="/floor-details"
            element={<FloorDetailsPage floorData={floorData} />}
          />
        </Routes>
      </Container>
    </div>
  );
}

export default function App() {
  return (
    <BrowserRouter>
      <AppWrapper />
    </BrowserRouter>
  );
}








// src/pages/FloorDetailsPage.jsx

import React from 'react';
import { Container, Row, Col, Card, Table } from 'react-bootstrap';

export default function FloorDetailsPage({ floorData = [] }) {
  if (!floorData.length) {
    return <p className="text-center mt-4">No floor details available.</p>;
  }

  return (
    <Container fluid className="py-4">
      <h2 className="mb-4 text-dark">Floor Details</h2>
      <Row xs={1} md={2} lg={3} className="g-4">
        {floorData.map(({ floor, total, occupants }) => (
          <Col key={floor}>
            <Card className="h-100 border-warning">
              <Card.Header className="bg-warning text-dark">
                <strong>{floor}</strong> — Total: {total}
              </Card.Header>
              <Card.Body style={{ overflowY: 'auto', maxHeight: 300 }}>
                <Table striped bordered hover size="sm" className="mb-0">
                  <thead className="table-light">
                    <tr>
                      <th>Name</th>
                      <th>Swipe Time</th>
                      <th>Type</th>
                      <th>Door Name</th>
                    </tr>
                  </thead>
                  <tbody>
                    {occupants.map((emp, idx) => (
                      <tr key={`${emp.EmployeeID}-${idx}`}>
                        <td>{emp.ObjectName1}</td>
                        <td>{emp.Swipe_Time}</td>
                        <td>{emp.PersonnelType}</td>
                        <td>{emp.Door}</td>
                      </tr>
                    ))}
                  </tbody>
                </Table>
              </Card.Body>
            </Card>
          </Col>
        ))}
      </Row>
    </Container>
  );
}













Lets read below files carefully i need  Floor Details page light not dark only for this page .
and icons to chang theme dark to faint is not Werking please update all Above File anf give me Updated js file carefully.
give me full Updated js files so i can easily swap this file 

// src/App.js

import React, { useEffect, useState } from 'react';
import { Container, Navbar, Nav } from 'react-bootstrap';
import { BrowserRouter, Routes, Route, Link } from 'react-router-dom';
import { FaSun } from 'react-icons/fa';

import DashboardHome    from './pages/DashboardHome';
import FloorDetailsPage from './pages/FloorDetailsPage';

import './App.css';

function App() {
  // always start in dark
  const [theme, setTheme] = useState('dark');

  // live data states
  const [summaryData, setSummaryData]             = useState([]);
  const [floorData, setFloorData]                 = useState([]);
  const [personnelBreakdown, setPersonnelBreakdown] = useState([]);
  const [totalVisitedToday, setTotalVisitedToday] = useState(0);
  const [personnelSummary, setPersonnelSummary]   = useState({ employees: 0, contractors: 0 });
  const [visitedToday, setVisitedToday]           = useState({ employees: 0, contractors: 0, total: 0 });

  // SSE for live occupancy
  useEffect(() => {
    const es = new EventSource('http://localhost:5000/api/live-occupancy-denver');
    es.onmessage = e => {
      try {
        const p = JSON.parse(e.data);
        setSummaryData(p.summary || []);
        setFloorData(p.floorBreakdown || []);
        setPersonnelBreakdown(p.personnelBreakdown || []);
        setTotalVisitedToday(p.totalVisitedToday || 0);
        setPersonnelSummary(p.personnelSummary || { employees: 0, contractors: 0 });
        setVisitedToday(p.visitedToday || { employees: 0, contractors: 0, total: 0 });
      } catch (err) {
        console.error('SSE parse error:', err);
      }
    };
    es.onerror = err => {
      console.error('SSE error:', err);
      es.close();
    };
    return () => es.close();
  }, []);

  // (Toggle kept just to show the sun icon—no light theme defined here)
  const toggleTheme = e => {
    e.preventDefault();
    // future hook
    setTheme('dark');
  };

  return (
    <BrowserRouter>
      <div className="dark-theme">
        <Navbar
          bg="dark"
          variant="dark"
          expand="lg"
          className="px-4 navbar-infographic"
        >
          <Navbar.Brand as={Link} to="/" className="wu-brand">
            Live Occupancy — Western Union Denver
          </Navbar.Brand>
          <Nav className="ms-auto align-items-center">
            <Nav.Link as={Link} to="/" className="nav-item-infographic">
              Dashboard
            </Nav.Link>
            <Nav.Link as={Link} to="/floor-details" className="nav-item-infographic">
              Floor Details
            </Nav.Link>
            <Nav.Link
              href="#"
              onClick={toggleTheme}
              className="theme-toggle-icon"
              title="Dark mode only"
            >
              <FaSun />
            </Nav.Link>
          </Nav>
        </Navbar>

        <Container fluid className="mt-4">
          <Routes>
            <Route
              path="/"
              element={
                <DashboardHome
                  personnelSummary={personnelSummary}
                  totalVisitedToday={totalVisitedToday}
                  visitedToday={visitedToday}
                  floorData={floorData}
                  personnelBreakdown={personnelBreakdown}
                  theme="dark"
                />
              }
            />
            <Route
              path="/floor-details"
              element={<FloorDetailsPage floorData={floorData} theme="dark" />}
            />
          </Routes>
        </Container>
      </div>
    </BrowserRouter>
  );
}

export default App;







// src/pages/FloorDetailsPage.jsx


import React from 'react';
import { Container, Row, Col, Card, Table } from 'react-bootstrap';
import FloorDetailsTable from '../components/FloorDetailsTable';

export default function FloorDetailsPage({ floorData = [] }) {
  if (!floorData.length) {
    return <p className="text-center mt-4">No floor details available.</p>;
  }

  return (
    <Container fluid className="py-4">
      <h2 className="mb-4">Floor Details</h2>
      <Row xs={1} md={2} lg={3} className="g-4">
        {floorData.map(({ floor, total, occupants }) => (
          <Col key={floor}>
            <Card border="primary" className="h-100">
              <Card.Header>
                <strong>{floor}</strong> — Total: {total}
              </Card.Header>
              <Card.Body style={{ overflowY: 'auto', maxHeight: 300 }}>
                <Table striped bordered hover size="sm" className="mb-0">
                  <thead>
                    <tr>
                      <th>Name</th>
                      <th>Swipe Time</th>
                      <th>Type</th>
                      <th>Door Name</th>
                    </tr>
                  </thead>
                  <tbody>
                    {occupants.map((emp, idx) => (
                      <tr key={`${emp.EmployeeID}-${idx}`}>
                        <td>{emp.ObjectName1}</td>
                        <td>{emp.Swipe_Time}</td>
                        <td>{emp.PersonnelType}</td>
                        <td>{emp.Door}</td>
                      </tr>
                    ))}
                  </tbody>
                </Table>
              </Card.Body>
            </Card>
          </Col>
        ))}
      </Row>
    </Container>



// src/components/FloorDetailsTable.jsx


import React from 'react';
import './FloorDetailsTable.css';

export default function FloorDetailsTable({ data = [] }) {
  if (!Array.isArray(data) || data.length === 0 || !data[0].floor) {
    return <p>No floor detail data available.</p>;
  }

  return (
    <div className="floor-cards">
      {data.map(({ floor, total, occupants }) => (
        <div key={floor} className="floor-card">
          <div className="floor-header">
            <h3>{floor}</h3>
            <span className="floor-badge">{total}</span>
          </div>

          <table className="floor-table">
            <thead>
              <tr>
                <th>Name</th>
                <th>ID</th>
                <th>Swipe Time</th>
                <th>Type</th>
                <th>Door Name</th>
              </tr>
            </thead>
            <tbody>
              {occupants.map((emp, i) => (
                <tr key={`${emp.EmployeeID}-${i}`}>
                  <td>{emp.ObjectName1}</td>
                  <td>{emp.EmployeeID}</td>                 
                  <td>{emp.Swipe_Time}</td>
                  <td>{emp.PersonnelType}</td>
                  <td>{emp.Door}</td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      ))}
    </div>
  );
}


  );
}



.floor-cards {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
}
.floor-card {
  flex: 1 1 300px;
  background: #ffffff;
  border-radius: 8px;
  box-shadow: 0 3px 6px rgba(0,0,0,0.1);
  overflow: hidden;
}
.floor-header {
  background: #4a90e2;
  color: #fff;
  padding: 0.5rem 1rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.floor-badge {
  background: rgba(255,255,255,0.3);
  border-radius: 12px;
  padding: 0.2rem 0.6rem;
  font-weight: bold;
}
.floor-table {
  width: 100%;
  border-collapse: collapse;
  font-size: 0.85rem;
}
.floor-table th,
.floor-table td {
  padding: 0.4rem 0.8rem;
  border-bottom: 1px solid #eee;
}

