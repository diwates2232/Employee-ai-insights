import React from 'react';
import {
  BarChart,
  Bar,
  XAxis,
  YAxis,
  Tooltip,
  ResponsiveContainer,
  CartesianGrid,
  Legend,
  Cell,
  LabelList
} from 'recharts';
import { Card } from 'react-bootstrap';

// Western Union-inspired floor colors
const FLOOR_COLORS = [
  '#FFD100', // WU Yellow
  '#000000', // Black
  '#58595B', // Gray
  '#FFB800', // Accent Yellow
  '#C0C0C0', // Light Gray
  '#333333', // Dark Gray
  '#F2C744', // WU warm highlight
  '#A6A6A6', // neutral
];

export default function FloorOccupancyChart({ data = [] }) {
  if (!data.length) {
    return <Card body>No floor data available</Card>;
  }

  const sortedData = [...data].sort((a, b) => b.total - a.total);

  return (
    <Card className="mb-4 shadow-sm border rounded" style={{ borderColor: '#e0e0e0' }}>
      <Card.Header className="fw-bold text-center">Floor-wise Occupancy</Card.Header>
      <Card.Body style={{ height: 380, padding: '1rem' }}>
        <ResponsiveContainer width="100%" height="100%">
          <BarChart
            data={sortedData}
            margin={{ top: 30, right: 30, left: 10, bottom: 40 }}
            barCategoryGap="10%"
          >
            <CartesianGrid strokeDasharray="4 4" stroke="#ccc" />
            <XAxis
              dataKey="floor"
              tick={{ fontSize: 12, fill: '#333' }}
              label={{ value: 'Floor', position: 'bottom', offset: 20 }}
            />
            <YAxis
              tick={{ fontSize: 12, fill: '#333' }}
              allowDecimals={false}
              label={{ value: 'Occupancy', angle: -90, position: 'insideLeft', offset: 10 }}
            />
            <Tooltip />
            <Legend verticalAlign="bottom" wrapperStyle={{ paddingTop: 10 }} />
            <Bar dataKey="total" name="Occupancy" radius={[6, 6, 0, 0]} barSize={40}>
              {sortedData.map((entry, idx) => (
                <Cell key={`cell-${idx}`} fill={FLOOR_COLORS[idx % FLOOR_COLORS.length]} stroke="#fff" strokeWidth={1} />
              ))}
              <LabelList dataKey="total" position="top" style={{ fill: '#000', fontSize: 12 }} />
            </Bar>
          </BarChart>
        </ResponsiveContainer>
      </Card.Body>
    </Card>
  );
}












This file is Ok .Jist add alignment and border as adjust hight of Chart box size only


import React from 'react';
import {
  BarChart,
  Bar,
  XAxis,
  YAxis,
  Tooltip,
  ResponsiveContainer,
  CartesianGrid,
  Legend,
  Cell,
  LabelList
} from 'recharts';
import { Card } from 'react-bootstrap';

// Western Union-inspired floor colors
const FLOOR_COLORS = [
  '#FFD100', // WU Yellow
  '#000000', // Black
  '#58595B', // Gray
  '#FFB800', // Accent Yellow
  '#C0C0C0', // Light Gray
  '#333333', // Dark Gray
  '#F2C744', // WU warm highlight
  '#A6A6A6', // neutral
];

export default function FloorOccupancyChart({ data = [] }) {
  if (!data.length) {
    return <Card body>No floor data available</Card>;
  }

  // Sort by count descending
  const sortedData = [...data].sort((a, b) => b.total - a.total);

  return (
    <Card className="mb-4">
      <Card.Header>Floor-wise Occupancy</Card.Header>
      <Card.Body style={{ height: 400 }}>
        
        <ResponsiveContainer width="100%" height="100%">
          <BarChart
            data={sortedData}
            margin={{ top: 30, right: 30, left: 10, bottom: 40 }}
          >
            <CartesianGrid strokeDasharray="3 3" stroke="#ccc" />
            <XAxis
              dataKey="floor"
              tick={{ fontSize: 12, fill: '#333' }}
              label={{ value: 'Floor', position: 'bottom', offset: 20 }}
            />
            <YAxis
              tick={{ fontSize: 12, fill: '#333' }}
              allowDecimals={false}
              label={{ value: 'Occupancy', angle: -90, position: 'insideLeft', offset: 10 }}
            />
            <Tooltip />
            <Legend verticalAlign="bottom" wrapperStyle={{ paddingTop: 10 }} />
            <Bar dataKey="total" name="Occupancy" radius={[6, 6, 0, 0]}>
              {
                sortedData.map((entry, idx) => (
                  <Cell key={`cell-${idx}`} fill={FLOOR_COLORS[idx % FLOOR_COLORS.length]} />
                ))
              }
              <LabelList dataKey="total" position="top" style={{ fill: '#000', fontSize: 12 }} />
            </Bar>
          </BarChart>
        </ResponsiveContainer>
      </Card.Body>
    </Card>
  );
}

