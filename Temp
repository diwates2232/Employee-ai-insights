
C:\Users\W0024618\Desktop\swipeData\client\src\components\SummaryChart.jsx

import React, { useEffect } from 'react';
import {
  BarChart,
  Bar,
  XAxis,
  YAxis,
  Tooltip,
  CartesianGrid,
  ResponsiveContainer,
  Legend
} from 'recharts';
import { Card } from 'react-bootstrap';

export default function SummaryChart({ summary = [] }) {
  useEffect(() => {
    console.log('Summary Chart Data:', summary);
  }, [summary]);

  return (
    <Card className="mb-4 shadow-sm border" style={{ borderColor: '#e0e0e0' }}>
      <Card.Header className="bg-dark text-warning text-center">
        Zone-wise Occupancy
      </Card.Header>
      <Card.Body style={{ height: 400 }}>
        <ResponsiveContainer width="100%" height="100%">
          <BarChart data={summary} margin={{ top: 20, right: 30, left: 0, bottom: 5 }}>
            <defs>
              <linearGradient id="zoneGradient" x1="0" y1="0" x2="0" y2="1">
                <stop offset="5%" stopColor="#FFD100" stopOpacity={0.8}/>
                <stop offset="95%" stopColor="#FFB800" stopOpacity={0.2}/>
              </linearGradient>
            </defs>
            <CartesianGrid stroke="#d0d0d0" strokeDasharray="4 4" />
            <XAxis dataKey="zone" tick={{ fontSize: 12, fill: '#333' }}/>
            <YAxis allowDecimals={false} tick={{ fontSize: 12, fill: '#333' }}/>
            <Tooltip />
            <Legend verticalAlign="bottom" wrapperStyle={{ paddingTop: 10 }} />
            <Bar
              dataKey="count"
              name="Count"
              fill="url(#zoneGradient)"
              radius={[6,6,0,0]}
            />
          </BarChart>
        </ResponsiveContainer>
      </Card.Body>
    </Card>
  );
}



C:\Users\W0024618\Desktop\swipeData\client\src\components\FloorOccupancyChart.jsx



import React from 'react';
import {
  BarChart,
  Bar,
  XAxis,
  YAxis,
  Tooltip,
  ResponsiveContainer,
  CartesianGrid,
  Legend
} from 'recharts';
import { Card } from 'react-bootstrap';

// Western Unionâ€“style colors for each series
const COLORS = [
  '#FFD100', // yellow
  '#000000', // black
  '#58595B', // dark gray
  '#FFB800', // accent yellow
  '#C0C0C0', // light gray
];

export default function FloorOccupancyChart({ data = [] }) {
  if (!data.length) {
    return <Card body>No floor data available</Card>;
  }

  // extract series keys (excluding floor & total)
  const types = Array.from(
    new Set(data.flatMap(d => Object.keys(d).filter(k => k !== 'floor' && k !== 'total')))
  );

  return (
    <Card className="mb-4 shadow-sm border" style={{ borderColor: '#e0e0e0' }}>
      <Card.Header className="bg-dark text-warning text-center">
        Floor-wise Occupancy
      </Card.Header>
      <Card.Body style={{ height: 400 }}>
        <ResponsiveContainer width="100%" height="100%">
          <BarChart data={data} margin={{ top: 20, right: 30, left: 0, bottom: 5 }}>
            <CartesianGrid stroke="#d0d0d0" strokeDasharray="4 4" />
            <XAxis dataKey="floor" tick={{ fontSize: 12, fill: '#333' }}/>
            <YAxis tick={{ fontSize: 12, fill: '#333' }} />
            <Tooltip />
            <Legend verticalAlign="bottom" wrapperStyle={{ paddingTop: 10 }} />
            {types.map((type, idx) => (
              <Bar
                key={type}
                dataKey={type}
                stackId="a"
                name={type}
                fill={COLORS[idx % COLORS.length]}
                radius={[6,6,0,0]}
              />
            ))}
          </BarChart>
        </ResponsiveContainer>
      </Card.Body>
    </Card>
  );
}





