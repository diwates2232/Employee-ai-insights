DB_SERVER=SRVWUDEN0890V
DB_USER=GSOC_Test
DB_PASSWORD=your_actual_password
DB_DATABASE=your_database_name





mkdir employee-ai-insights && cd employee-ai-insights
npm init -y
npm install express mysql2 dotenv cors

DB_HOST=localhost
DB_USER=your_sql_user
DB_PASSWORD=your_sql_password
DB_NAME=your_database_name



const mysql = require('mysql2');
const dotenv = require('dotenv');

dotenv.config();

const pool = mysql.createPool({
  host: process.env.DB_HOST,
  user: process.env.DB_USER,
  password: process.env.DB_PASSWORD,
  database: process.env.DB_NAME,
});

module.exports = pool.promise(); // allows async/await




const db = require('../config/db');

exports.getEmployeeData = async (req, res) => {
  try {
    const [rows] = await db.query(`
      SELECT id, name, status, department, applied_at, reason 
      FROM employees_status
    `); // Replace with your custom SQL query if needed
    res.json(rows);
  } catch (error) {
    console.error('SQL error:', error);
    res.status(500).json({ error: 'Internal Server Error' });
  }
};





const express = require('express');
const router = express.Router();
const { getEmployeeData } = require('../controllers/employeeController');

router.get('/employees', getEmployeeData);

module.exports = router;




const express = require('express');
const cors = require('cors');
const employeeRoutes = require('./routes/employeeRoutes');

const app = express();

app.use(cors());
app.use(express.json());

app.use('/api', employeeRoutes);

const PORT = 5000;
app.listen(PORT, () => {
  console.log(`Server running at http://localhost:${PORT}`);
});



