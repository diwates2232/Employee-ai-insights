C:\Users\W0024618\Desktop\swipeData\employee-ai-insights\config\db.js


// config/db.js

const sql = require('mssql');
const dotenv = require('dotenv');
dotenv.config();

const config = {
  server:   process.env.DB_SERVER,
  user:     process.env.DB_USER,
  password: process.env.DB_PASSWORD,
  database: process.env.DB_DATABASE,
  // bump the default timeouts and enable pooling
  connectionTimeout: 30000,    // 30 s to establish connection
  requestTimeout:    0,        // 0 = no timeout on queries
  pool: {
    max: 10,                   // up to 10 connections
    min: 0,
    idleTimeoutMillis: 30000   // 30 s before a connection is reaped
  },
  options: {
    encrypt:              true,
    trustServerCertificate: true
  }
};

const pool = new sql.ConnectionPool(config);
const poolConnect = pool
  .connect()
  .then(() => console.log('✅ MSSQL pool connected'))
  .catch(err => console.error('❌ MSSQL pool connection failed:', err));

// log any asynchronous errors on the pool
pool.on('error', err => {
  console.error('❌ MSSQL pool error:', err);
});

module.exports = { sql, poolConnect, pool };





C:\Users\W0024618\Desktop\swipeData\employee-ai-insights\config\siteConfig.js

// config/siteConfig.js

const { pool: punePool, sql } = require('./db'); 

// Create Denver connection
const denverPool = new sql.ConnectionPool({
  user:     'GSOC_Test',
  password: 'Westerngsoc@2025',
  server:   'SRVWUDEN0891V',
  database: 'ACVSUJournal_00010027',
  options: {
    encrypt: true,
    trustServerCertificate: true
  }
});

denverPool.connect();

module.exports = {
  pune: {
    name: 'Pune',
    pool: punePool,
    doorZoneMap:   require('../data/doorZoneMap'),
    zoneFloorMap:  require('../data/zoneFloorMap')
  },
  denver: {
    name: 'Denver',
    pool: denverPool,
    zoneFloorMap:  require('../data/denverDoorFloorMap'),
  }
};




C:\Users\W0024618\Desktop\swipeData\employee-ai-insights\.env

DB_SERVER=SRVWUPNQ0986V
DB_USER=GSOC_Test
DB_PASSWORD=Westernuniongsoc@2025
DB_DATABASE=ACVSUJournal_00010020
PORT=5000
